
bin/main.elf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_text>:
       0:	20000100 	.word	0x20000100
       4:	00000275 	.word	0x00000275
       8:	0000026d 	.word	0x0000026d
       c:	0000026f 	.word	0x0000026f
      10:	00000271 	.word	0x00000271
      14:	00000271 	.word	0x00000271
      18:	00000271 	.word	0x00000271
	...
      2c:	00000271 	.word	0x00000271
      30:	00000271 	.word	0x00000271
      34:	00000000 	.word	0x00000000
      38:	00000271 	.word	0x00000271
      3c:	00000271 	.word	0x00000271
      40:	00000271 	.word	0x00000271
      44:	00000271 	.word	0x00000271
      48:	00000271 	.word	0x00000271
      4c:	00000271 	.word	0x00000271
      50:	00000271 	.word	0x00000271
      54:	00000271 	.word	0x00000271
      58:	00000271 	.word	0x00000271
      5c:	00000271 	.word	0x00000271
      60:	00000271 	.word	0x00000271
      64:	00000271 	.word	0x00000271
      68:	00000271 	.word	0x00000271
      6c:	00000271 	.word	0x00000271
      70:	00000271 	.word	0x00000271
      74:	00000271 	.word	0x00000271
      78:	00000271 	.word	0x00000271
      7c:	00000271 	.word	0x00000271
      80:	00000271 	.word	0x00000271
      84:	00000271 	.word	0x00000271
      88:	00000271 	.word	0x00000271
      8c:	00000271 	.word	0x00000271
      90:	00000271 	.word	0x00000271
      94:	00000271 	.word	0x00000271
      98:	00000271 	.word	0x00000271
      9c:	00000271 	.word	0x00000271
      a0:	00000271 	.word	0x00000271
      a4:	00000271 	.word	0x00000271
      a8:	00000271 	.word	0x00000271
      ac:	00000271 	.word	0x00000271
      b0:	00000271 	.word	0x00000271
      b4:	00000271 	.word	0x00000271
      b8:	00000271 	.word	0x00000271
      bc:	00000271 	.word	0x00000271
      c0:	00000271 	.word	0x00000271
      c4:	00000271 	.word	0x00000271
      c8:	00000271 	.word	0x00000271
      cc:	00000271 	.word	0x00000271
      d0:	00000271 	.word	0x00000271
      d4:	00000271 	.word	0x00000271
      d8:	00000271 	.word	0x00000271
      dc:	00000271 	.word	0x00000271
      e0:	00000271 	.word	0x00000271
      e4:	00000271 	.word	0x00000271
      e8:	00000271 	.word	0x00000271
      ec:	00000271 	.word	0x00000271
      f0:	00000271 	.word	0x00000271
      f4:	00000271 	.word	0x00000271
      f8:	00000271 	.word	0x00000271
      fc:	00000271 	.word	0x00000271
     100:	00000271 	.word	0x00000271
     104:	00000271 	.word	0x00000271
     108:	00000271 	.word	0x00000271
     10c:	00000271 	.word	0x00000271
     110:	00000271 	.word	0x00000271
     114:	00000271 	.word	0x00000271
     118:	00000271 	.word	0x00000271
     11c:	00000271 	.word	0x00000271
     120:	00000271 	.word	0x00000271
     124:	00000271 	.word	0x00000271
     128:	00000271 	.word	0x00000271
     12c:	00000271 	.word	0x00000271
     130:	00000271 	.word	0x00000271
     134:	00000271 	.word	0x00000271
     138:	00000271 	.word	0x00000271
     13c:	00000271 	.word	0x00000271
	...
     150:	00000271 	.word	0x00000271
     154:	00000271 	.word	0x00000271
     158:	00000271 	.word	0x00000271
     15c:	00000271 	.word	0x00000271
	...
     1b0:	00000271 	.word	0x00000271
     1b4:	00000271 	.word	0x00000271
     1b8:	00000271 	.word	0x00000271
     1bc:	00000271 	.word	0x00000271
     1c0:	00000271 	.word	0x00000271
     1c4:	00000271 	.word	0x00000271
     1c8:	00000271 	.word	0x00000271
     1cc:	00000271 	.word	0x00000271
     1d0:	00000271 	.word	0x00000271
     1d4:	00000271 	.word	0x00000271
     1d8:	00000271 	.word	0x00000271
     1dc:	00000271 	.word	0x00000271
     1e0:	00000271 	.word	0x00000271
     1e4:	00000271 	.word	0x00000271
     1e8:	00000271 	.word	0x00000271
     1ec:	00000271 	.word	0x00000271
     1f0:	00000271 	.word	0x00000271
     1f4:	00000271 	.word	0x00000271
     1f8:	00000271 	.word	0x00000271
     1fc:	00000271 	.word	0x00000271
     200:	00000271 	.word	0x00000271
     204:	00000271 	.word	0x00000271
     208:	00000271 	.word	0x00000271
     20c:	00000000 	.word	0x00000000
     210:	00000271 	.word	0x00000271
     214:	00000271 	.word	0x00000271
     218:	00000271 	.word	0x00000271
     21c:	00000271 	.word	0x00000271
     220:	00000271 	.word	0x00000271
     224:	00000271 	.word	0x00000271
     228:	00000271 	.word	0x00000271
     22c:	00000271 	.word	0x00000271
     230:	00000271 	.word	0x00000271
     234:	00000271 	.word	0x00000271
     238:	00000271 	.word	0x00000271
     23c:	00000271 	.word	0x00000271
     240:	00000271 	.word	0x00000271
     244:	00000271 	.word	0x00000271
     248:	00000271 	.word	0x00000271
     24c:	00000271 	.word	0x00000271
     250:	00000271 	.word	0x00000271
     254:	00000271 	.word	0x00000271
     258:	00000271 	.word	0x00000271
     25c:	00000271 	.word	0x00000271
     260:	00000271 	.word	0x00000271
     264:	00000271 	.word	0x00000271
     268:	00000271 	.word	0x00000271

0000026c <NmiSR>:
// by a debugger.
//
//*****************************************************************************
static void
NmiSR(void)
{
     26c:	e7fe      	b.n	26c <NmiSR>

0000026e <FaultISR>:
// for examination by a debugger.
//
//*****************************************************************************
static void
FaultISR(void)
{
     26e:	e7fe      	b.n	26e <FaultISR>

00000270 <IntDefaultHandler>:
// for examination by a debugger.
//
//*****************************************************************************
static void
IntDefaultHandler(void)
{
     270:	e7fe      	b.n	270 <IntDefaultHandler>
	...

00000274 <ResetISR>:

    //
    // Copy the data segment initializers from flash to SRAM.
    //
    pulSrc = &_etext;
    for(pulDest = &_data; pulDest < &_edata; )
     274:	2300      	movs	r3, #0
// resetting the bits in that register) are left solely in the hands of the
// application.
//
//*****************************************************************************
void
ResetISR(void)
     276:	4a0d      	ldr	r2, [pc, #52]	; (2ac <zero_loop+0x1a>)

    //
    // Copy the data segment initializers from flash to SRAM.
    //
    pulSrc = &_etext;
    for(pulDest = &_data; pulDest < &_edata; )
     278:	490d      	ldr	r1, [pc, #52]	; (2b0 <zero_loop+0x1e>)
// resetting the bits in that register) are left solely in the hands of the
// application.
//
//*****************************************************************************
void
ResetISR(void)
     27a:	1898      	adds	r0, r3, r2

    //
    // Copy the data segment initializers from flash to SRAM.
    //
    pulSrc = &_etext;
    for(pulDest = &_data; pulDest < &_edata; )
     27c:	4288      	cmp	r0, r1
     27e:	d204      	bcs.n	28a <ResetISR+0x16>
    {
        *pulDest++ = *pulSrc++;
     280:	490c      	ldr	r1, [pc, #48]	; (2b4 <zero_loop+0x22>)
     282:	5858      	ldr	r0, [r3, r1]
     284:	5098      	str	r0, [r3, r2]
     286:	3304      	adds	r3, #4
     288:	e7f5      	b.n	276 <ResetISR+0x2>
    }

    //
    // Zero fill the bss segment.
    //
    __asm("    ldr     r0, =_bss\n"
     28a:	480c      	ldr	r0, [pc, #48]	; (2bc <zero_loop+0x2a>)
     28c:	490c      	ldr	r1, [pc, #48]	; (2c0 <zero_loop+0x2e>)
     28e:	f04f 0200 	mov.w	r2, #0

00000292 <zero_loop>:
     292:	4288      	cmp	r0, r1
     294:	bfb8      	it	lt
     296:	f840 2b04 	strlt.w	r2, [r0], #4
     29a:	f6ff affa 	blt.w	292 <zero_loop>
    // APIs must be done here prior to the floating-point unit being enabled.
    //
    // Note that this does not use DriverLib since it might not be included in
    // this project.
    //
    HWREG(NVIC_CPAC) = ((HWREG(NVIC_CPAC) &
     29e:	4b06      	ldr	r3, [pc, #24]	; (2b8 <zero_loop+0x26>)
     2a0:	681a      	ldr	r2, [r3, #0]
                         ~(NVIC_CPAC_CP10_M | NVIC_CPAC_CP11_M)) |
                        NVIC_CPAC_CP10_FULL | NVIC_CPAC_CP11_FULL);
     2a2:	f442 0070 	orr.w	r0, r2, #15728640	; 0xf00000
    // APIs must be done here prior to the floating-point unit being enabled.
    //
    // Note that this does not use DriverLib since it might not be included in
    // this project.
    //
    HWREG(NVIC_CPAC) = ((HWREG(NVIC_CPAC) &
     2a6:	6018      	str	r0, [r3, #0]
                        NVIC_CPAC_CP10_FULL | NVIC_CPAC_CP11_FULL);

    //
    // Call the application's entry point.
    //
    main();
     2a8:	f000 b810 	b.w	2cc <main>
     2ac:	20000000 	.word	0x20000000
     2b0:	20000000 	.word	0x20000000
     2b4:	000013e8 	.word	0x000013e8
     2b8:	e000ed88 	.word	0xe000ed88
     2bc:	20000000 	.word	0x20000000
     2c0:	20000104 	.word	0x20000104

000002c4 <abort>:
    while(1)
    {
    }
}

extern void abort(void) {
     2c4:	e7fe      	b.n	2c4 <abort>

000002c6 <memcpy>:
	while(1);
}

extern void memcpy(void) {
     2c6:	e7fe      	b.n	2c6 <memcpy>

000002c8 <__exidx_start>:
	while(1);
}

extern void __exidx_start(void) {
     2c8:	e7fe      	b.n	2c8 <__exidx_start>

000002ca <__exidx_end>:
	while(1);
}

extern void __exidx_end(void) {
     2ca:	e7fe      	b.n	2ca <__exidx_end>

000002cc <main>:
#include "software/flourescent_lamp.h"

GPIOPin lamp_1(GPIO_PORTF_BASE, GPIO_PIN_2, GPIO_DIR_MODE_OUT);
FlourescentLamp lamp(lamp_1);

int main(void) {
     2cc:	b508      	push	{r3, lr}
    
	lamp.turnOn();
     2ce:	4802      	ldr	r0, [pc, #8]	; (2d8 <main+0xc>)
     2d0:	f000 f80a 	bl	2e8 <_ZN15FlourescentLamp6turnOnEv>
     2d4:	e7fe      	b.n	2d4 <main+0x8>
     2d6:	bf00      	nop
     2d8:	20000100 	.word	0x20000100

000002dc <_ZN7GPIOPin5writeEh>:
			break;
	}
	GPIOPinWrite(ulPort,ucPin,ucVal);
}

void GPIOPin::write(unsigned char Val) {
     2dc:	4603      	mov	r3, r0
     2de:	460a      	mov	r2, r1
	GPIOPinWrite(ulPort,ucPin,Val);
     2e0:	6840      	ldr	r0, [r0, #4]
     2e2:	7819      	ldrb	r1, [r3, #0]
     2e4:	f000 b804 	b.w	2f0 <GPIOPinWrite>

000002e8 <_ZN15FlourescentLamp6turnOnEv>:
FlourescentLamp::FlourescentLamp(GPIOPin pin) {
	gpio_pin = &pin;
}

void FlourescentLamp::turnOn() {
	gpio_pin->write(0x4);
     2e8:	6800      	ldr	r0, [r0, #0]
     2ea:	2104      	movs	r1, #4
     2ec:	f7ff bff6 	b.w	2dc <_ZN7GPIOPin5writeEh>

000002f0 <GPIOPinWrite>:
     2f0:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
     2f4:	4770      	bx	lr
	...

000002f8 <selfrel_offset31>:
     2f8:	6803      	ldr	r3, [r0, #0]
     2fa:	005a      	lsls	r2, r3, #1
     2fc:	bf4c      	ite	mi
     2fe:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
     302:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
     306:	18c0      	adds	r0, r0, r3
     308:	4770      	bx	lr
     30a:	bf00      	nop

0000030c <search_EIT_table>:
     30c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     310:	4606      	mov	r6, r0
     312:	b083      	sub	sp, #12
     314:	4691      	mov	r9, r2
     316:	b311      	cbz	r1, 35e <search_EIT_table+0x52>
     318:	3901      	subs	r1, #1
     31a:	9101      	str	r1, [sp, #4]
     31c:	4688      	mov	r8, r1
     31e:	2700      	movs	r7, #0
     320:	eb07 0408 	add.w	r4, r7, r8
     324:	eb04 70d4 	add.w	r0, r4, r4, lsr #31
     328:	1044      	asrs	r4, r0, #1
     32a:	eb06 0bc4 	add.w	fp, r6, r4, lsl #3
     32e:	4658      	mov	r0, fp
     330:	f7ff ffe2 	bl	2f8 <selfrel_offset31>
     334:	9b01      	ldr	r3, [sp, #4]
     336:	1c65      	adds	r5, r4, #1
     338:	42a3      	cmp	r3, r4
     33a:	4682      	mov	sl, r0
     33c:	eb06 00c5 	add.w	r0, r6, r5, lsl #3
     340:	d015      	beq.n	36e <search_EIT_table+0x62>
     342:	f7ff ffd9 	bl	2f8 <selfrel_offset31>
     346:	1e42      	subs	r2, r0, #1
     348:	45ca      	cmp	sl, r9
     34a:	d904      	bls.n	356 <search_EIT_table+0x4a>
     34c:	42bc      	cmp	r4, r7
     34e:	d00b      	beq.n	368 <search_EIT_table+0x5c>
     350:	f104 38ff 	add.w	r8, r4, #4294967295	; 0xffffffff
     354:	e7e4      	b.n	320 <search_EIT_table+0x14>
     356:	454a      	cmp	r2, r9
     358:	d202      	bcs.n	360 <search_EIT_table+0x54>
     35a:	462f      	mov	r7, r5
     35c:	e7e0      	b.n	320 <search_EIT_table+0x14>
     35e:	468b      	mov	fp, r1
     360:	4658      	mov	r0, fp
     362:	b003      	add	sp, #12
     364:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
     368:	f04f 0b00 	mov.w	fp, #0
     36c:	e7f8      	b.n	360 <search_EIT_table+0x54>
     36e:	45ca      	cmp	sl, r9
     370:	d8ec      	bhi.n	34c <search_EIT_table+0x40>
     372:	e7f5      	b.n	360 <search_EIT_table+0x54>

00000374 <__gnu_unwind_get_pr_addr>:
     374:	2801      	cmp	r0, #1
     376:	d007      	beq.n	388 <__gnu_unwind_get_pr_addr+0x14>
     378:	2802      	cmp	r0, #2
     37a:	d007      	beq.n	38c <__gnu_unwind_get_pr_addr+0x18>
     37c:	4b04      	ldr	r3, [pc, #16]	; (390 <__gnu_unwind_get_pr_addr+0x1c>)
     37e:	2800      	cmp	r0, #0
     380:	bf0c      	ite	eq
     382:	4618      	moveq	r0, r3
     384:	2000      	movne	r0, #0
     386:	4770      	bx	lr
     388:	4802      	ldr	r0, [pc, #8]	; (394 <__gnu_unwind_get_pr_addr+0x20>)
     38a:	4770      	bx	lr
     38c:	4802      	ldr	r0, [pc, #8]	; (398 <__gnu_unwind_get_pr_addr+0x24>)
     38e:	4770      	bx	lr
     390:	00000a91 	.word	0x00000a91
     394:	00000a89 	.word	0x00000a89
     398:	00000a81 	.word	0x00000a81

0000039c <restore_non_core_regs>:
     39c:	6803      	ldr	r3, [r0, #0]
     39e:	b510      	push	{r4, lr}
     3a0:	4604      	mov	r4, r0
     3a2:	07d8      	lsls	r0, r3, #31
     3a4:	d406      	bmi.n	3b4 <restore_non_core_regs+0x18>
     3a6:	0799      	lsls	r1, r3, #30
     3a8:	f104 0048 	add.w	r0, r4, #72	; 0x48
     3ac:	d509      	bpl.n	3c2 <restore_non_core_regs+0x26>
     3ae:	f000 fd89 	bl	ec4 <__gnu_Unwind_Restore_VFP_D>
     3b2:	6823      	ldr	r3, [r4, #0]
     3b4:	075a      	lsls	r2, r3, #29
     3b6:	d509      	bpl.n	3cc <restore_non_core_regs+0x30>
     3b8:	0718      	lsls	r0, r3, #28
     3ba:	d50e      	bpl.n	3da <restore_non_core_regs+0x3e>
     3bc:	06d9      	lsls	r1, r3, #27
     3be:	d513      	bpl.n	3e8 <restore_non_core_regs+0x4c>
     3c0:	bd10      	pop	{r4, pc}
     3c2:	f000 fd77 	bl	eb4 <__gnu_Unwind_Restore_VFP>
     3c6:	6823      	ldr	r3, [r4, #0]
     3c8:	075a      	lsls	r2, r3, #29
     3ca:	d4f5      	bmi.n	3b8 <restore_non_core_regs+0x1c>
     3cc:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
     3d0:	f000 fd80 	bl	ed4 <__gnu_Unwind_Restore_VFP_D_16_to_31>
     3d4:	6823      	ldr	r3, [r4, #0]
     3d6:	0718      	lsls	r0, r3, #28
     3d8:	d4f0      	bmi.n	3bc <restore_non_core_regs+0x20>
     3da:	f504 70d8 	add.w	r0, r4, #432	; 0x1b0
     3de:	f000 fd81 	bl	ee4 <__gnu_Unwind_Restore_WMMXD>
     3e2:	6823      	ldr	r3, [r4, #0]
     3e4:	06d9      	lsls	r1, r3, #27
     3e6:	d4eb      	bmi.n	3c0 <restore_non_core_regs+0x24>
     3e8:	f504 700c 	add.w	r0, r4, #560	; 0x230
     3ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     3f0:	f000 bdbc 	b.w	f6c <__gnu_Unwind_Restore_WMMXC>

000003f4 <get_eit_entry>:
     3f4:	b530      	push	{r4, r5, lr}
     3f6:	4b24      	ldr	r3, [pc, #144]	; (488 <get_eit_entry+0x94>)
     3f8:	b083      	sub	sp, #12
     3fa:	4604      	mov	r4, r0
     3fc:	1e8d      	subs	r5, r1, #2
     3fe:	2b00      	cmp	r3, #0
     400:	d03c      	beq.n	47c <get_eit_entry+0x88>
     402:	a901      	add	r1, sp, #4
     404:	4628      	mov	r0, r5
     406:	f3af 8000 	nop.w
     40a:	4601      	mov	r1, r0
     40c:	2900      	cmp	r1, #0
     40e:	d021      	beq.n	454 <get_eit_entry+0x60>
     410:	462a      	mov	r2, r5
     412:	9901      	ldr	r1, [sp, #4]
     414:	f7ff ff7a 	bl	30c <search_EIT_table>
     418:	4605      	mov	r5, r0
     41a:	b1f0      	cbz	r0, 45a <get_eit_entry+0x66>
     41c:	f7ff ff6c 	bl	2f8 <selfrel_offset31>
     420:	686a      	ldr	r2, [r5, #4]
     422:	64a0      	str	r0, [r4, #72]	; 0x48
     424:	2a01      	cmp	r2, #1
     426:	d011      	beq.n	44c <get_eit_entry+0x58>
     428:	1d28      	adds	r0, r5, #4
     42a:	2a00      	cmp	r2, #0
     42c:	db22      	blt.n	474 <get_eit_entry+0x80>
     42e:	f7ff ff63 	bl	2f8 <selfrel_offset31>
     432:	2300      	movs	r3, #0
     434:	64e0      	str	r0, [r4, #76]	; 0x4c
     436:	6523      	str	r3, [r4, #80]	; 0x50
     438:	6802      	ldr	r2, [r0, #0]
     43a:	2a00      	cmp	r2, #0
     43c:	db10      	blt.n	460 <get_eit_entry+0x6c>
     43e:	f7ff ff5b 	bl	2f8 <selfrel_offset31>
     442:	2300      	movs	r3, #0
     444:	6120      	str	r0, [r4, #16]
     446:	4618      	mov	r0, r3
     448:	b003      	add	sp, #12
     44a:	bd30      	pop	{r4, r5, pc}
     44c:	2000      	movs	r0, #0
     44e:	6120      	str	r0, [r4, #16]
     450:	2305      	movs	r3, #5
     452:	e7f8      	b.n	446 <get_eit_entry+0x52>
     454:	6121      	str	r1, [r4, #16]
     456:	2309      	movs	r3, #9
     458:	e7f5      	b.n	446 <get_eit_entry+0x52>
     45a:	6120      	str	r0, [r4, #16]
     45c:	2309      	movs	r3, #9
     45e:	e7f2      	b.n	446 <get_eit_entry+0x52>
     460:	f3c2 6003 	ubfx	r0, r2, #24, #4
     464:	f7ff ff86 	bl	374 <__gnu_unwind_get_pr_addr>
     468:	6120      	str	r0, [r4, #16]
     46a:	2800      	cmp	r0, #0
     46c:	bf0c      	ite	eq
     46e:	2309      	moveq	r3, #9
     470:	2300      	movne	r3, #0
     472:	e7e8      	b.n	446 <get_eit_entry+0x52>
     474:	2101      	movs	r1, #1
     476:	64e0      	str	r0, [r4, #76]	; 0x4c
     478:	6521      	str	r1, [r4, #80]	; 0x50
     47a:	e7dd      	b.n	438 <get_eit_entry+0x44>
     47c:	4803      	ldr	r0, [pc, #12]	; (48c <get_eit_entry+0x98>)
     47e:	4904      	ldr	r1, [pc, #16]	; (490 <get_eit_entry+0x9c>)
     480:	1a0a      	subs	r2, r1, r0
     482:	10d3      	asrs	r3, r2, #3
     484:	9301      	str	r3, [sp, #4]
     486:	e7c3      	b.n	410 <get_eit_entry+0x1c>
     488:	00000000 	.word	0x00000000
     48c:	000002c9 	.word	0x000002c9
     490:	000002cb 	.word	0x000002cb

00000494 <_Unwind_decode_typeinfo_ptr.isra.0>:
     494:	6803      	ldr	r3, [r0, #0]
     496:	b103      	cbz	r3, 49a <_Unwind_decode_typeinfo_ptr.isra.0+0x6>
     498:	181b      	adds	r3, r3, r0
     49a:	4618      	mov	r0, r3
     49c:	4770      	bx	lr
     49e:	bf00      	nop

000004a0 <__gnu_unwind_24bit.isra.1>:
     4a0:	2009      	movs	r0, #9
     4a2:	4770      	bx	lr

000004a4 <_Unwind_DebugHook>:
     4a4:	4770      	bx	lr
     4a6:	bf00      	nop

000004a8 <unwind_phase2_forced>:
     4a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
     4ac:	1d0c      	adds	r4, r1, #4
     4ae:	4606      	mov	r6, r0
     4b0:	4617      	mov	r7, r2
     4b2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
     4b4:	f5ad 6d91 	sub.w	sp, sp, #1160	; 0x488
     4b8:	ad03      	add	r5, sp, #12
     4ba:	c50f      	stmia	r5!, {r0, r1, r2, r3}
     4bc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
     4be:	c50f      	stmia	r5!, {r0, r1, r2, r3}
     4c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
     4c2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
     4c4:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
     4c8:	ac02      	add	r4, sp, #8
     4ca:	f8d6 800c 	ldr.w	r8, [r6, #12]
     4ce:	f8d6 9018 	ldr.w	r9, [r6, #24]
     4d2:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
     4d6:	2300      	movs	r3, #0
     4d8:	4630      	mov	r0, r6
     4da:	6c21      	ldr	r1, [r4, #64]	; 0x40
     4dc:	6023      	str	r3, [r4, #0]
     4de:	429f      	cmp	r7, r3
     4e0:	bf14      	ite	ne
     4e2:	270a      	movne	r7, #10
     4e4:	2709      	moveq	r7, #9
     4e6:	f7ff ff85 	bl	3f4 <get_eit_entry>
     4ea:	4605      	mov	r5, r0
     4ec:	b19d      	cbz	r5, 516 <unwind_phase2_forced+0x6e>
     4ee:	6ba0      	ldr	r0, [r4, #56]	; 0x38
     4f0:	9400      	str	r4, [sp, #0]
     4f2:	4632      	mov	r2, r6
     4f4:	6460      	str	r0, [r4, #68]	; 0x44
     4f6:	f047 0110 	orr.w	r1, r7, #16
     4fa:	f8cd 9004 	str.w	r9, [sp, #4]
     4fe:	2001      	movs	r0, #1
     500:	4633      	mov	r3, r6
     502:	47c0      	blx	r8
     504:	2800      	cmp	r0, #0
     506:	bf0c      	ite	eq
     508:	4628      	moveq	r0, r5
     50a:	2009      	movne	r0, #9
     50c:	b022      	add	sp, #136	; 0x88
     50e:	f50d 6d80 	add.w	sp, sp, #1024	; 0x400
     512:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
     516:	6c23      	ldr	r3, [r4, #64]	; 0x40
     518:	4621      	mov	r1, r4
     51a:	f44f 7210 	mov.w	r2, #576	; 0x240
     51e:	6173      	str	r3, [r6, #20]
     520:	a892      	add	r0, sp, #584	; 0x248
     522:	f7ff fed0 	bl	2c6 <memcpy>
     526:	4631      	mov	r1, r6
     528:	aa92      	add	r2, sp, #584	; 0x248
     52a:	6933      	ldr	r3, [r6, #16]
     52c:	4638      	mov	r0, r7
     52e:	4798      	blx	r3
     530:	99a0      	ldr	r1, [sp, #640]	; 0x280
     532:	9400      	str	r4, [sp, #0]
     534:	4682      	mov	sl, r0
     536:	6461      	str	r1, [r4, #68]	; 0x44
     538:	2001      	movs	r0, #1
     53a:	f8cd 9004 	str.w	r9, [sp, #4]
     53e:	4639      	mov	r1, r7
     540:	4632      	mov	r2, r6
     542:	4633      	mov	r3, r6
     544:	47c0      	blx	r8
     546:	b990      	cbnz	r0, 56e <unwind_phase2_forced+0xc6>
     548:	4620      	mov	r0, r4
     54a:	a992      	add	r1, sp, #584	; 0x248
     54c:	f44f 7210 	mov.w	r2, #576	; 0x240
     550:	f7ff feb9 	bl	2c6 <memcpy>
     554:	f1ba 0f08 	cmp.w	sl, #8
     558:	d106      	bne.n	568 <unwind_phase2_forced+0xc0>
     55a:	4630      	mov	r0, r6
     55c:	6c21      	ldr	r1, [r4, #64]	; 0x40
     55e:	f7ff ff49 	bl	3f4 <get_eit_entry>
     562:	2709      	movs	r7, #9
     564:	4605      	mov	r5, r0
     566:	e7c1      	b.n	4ec <unwind_phase2_forced+0x44>
     568:	f1ba 0f07 	cmp.w	sl, #7
     56c:	d001      	beq.n	572 <unwind_phase2_forced+0xca>
     56e:	2009      	movs	r0, #9
     570:	e7cc      	b.n	50c <unwind_phase2_forced+0x64>
     572:	4628      	mov	r0, r5
     574:	6c21      	ldr	r1, [r4, #64]	; 0x40
     576:	f7ff ff95 	bl	4a4 <_Unwind_DebugHook>
     57a:	a803      	add	r0, sp, #12
     57c:	f000 fc8e 	bl	e9c <__restore_core_regs>

00000580 <unwind_phase2>:
     580:	b570      	push	{r4, r5, r6, lr}
     582:	4604      	mov	r4, r0
     584:	460d      	mov	r5, r1
     586:	4620      	mov	r0, r4
     588:	6c29      	ldr	r1, [r5, #64]	; 0x40
     58a:	f7ff ff33 	bl	3f4 <get_eit_entry>
     58e:	4606      	mov	r6, r0
     590:	b950      	cbnz	r0, 5a8 <unwind_phase2+0x28>
     592:	6c2a      	ldr	r2, [r5, #64]	; 0x40
     594:	6923      	ldr	r3, [r4, #16]
     596:	6162      	str	r2, [r4, #20]
     598:	2001      	movs	r0, #1
     59a:	4621      	mov	r1, r4
     59c:	462a      	mov	r2, r5
     59e:	4798      	blx	r3
     5a0:	2808      	cmp	r0, #8
     5a2:	d0f0      	beq.n	586 <unwind_phase2+0x6>
     5a4:	2807      	cmp	r0, #7
     5a6:	d001      	beq.n	5ac <unwind_phase2+0x2c>
     5a8:	f7ff fe8c 	bl	2c4 <abort>
     5ac:	4630      	mov	r0, r6
     5ae:	6c29      	ldr	r1, [r5, #64]	; 0x40
     5b0:	f7ff ff78 	bl	4a4 <_Unwind_DebugHook>
     5b4:	1d28      	adds	r0, r5, #4
     5b6:	f000 fc71 	bl	e9c <__restore_core_regs>
     5ba:	bf00      	nop

000005bc <_Unwind_GetCFA>:
     5bc:	6c40      	ldr	r0, [r0, #68]	; 0x44
     5be:	4770      	bx	lr

000005c0 <__gnu_Unwind_RaiseException>:
     5c0:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
     5c2:	b5f0      	push	{r4, r5, r6, r7, lr}
     5c4:	640b      	str	r3, [r1, #64]	; 0x40
     5c6:	1d0d      	adds	r5, r1, #4
     5c8:	460f      	mov	r7, r1
     5ca:	4606      	mov	r6, r0
     5cc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
     5ce:	f5ad 7d11 	sub.w	sp, sp, #580	; 0x244
     5d2:	ac01      	add	r4, sp, #4
     5d4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
     5d6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
     5d8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
     5da:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
     5dc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
     5de:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
     5e2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
     5e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     5ea:	9000      	str	r0, [sp, #0]
     5ec:	4630      	mov	r0, r6
     5ee:	9910      	ldr	r1, [sp, #64]	; 0x40
     5f0:	f7ff ff00 	bl	3f4 <get_eit_entry>
     5f4:	b958      	cbnz	r0, 60e <__gnu_Unwind_RaiseException+0x4e>
     5f6:	6934      	ldr	r4, [r6, #16]
     5f8:	4631      	mov	r1, r6
     5fa:	466a      	mov	r2, sp
     5fc:	47a0      	blx	r4
     5fe:	2808      	cmp	r0, #8
     600:	4604      	mov	r4, r0
     602:	d0f3      	beq.n	5ec <__gnu_Unwind_RaiseException+0x2c>
     604:	4668      	mov	r0, sp
     606:	f7ff fec9 	bl	39c <restore_non_core_regs>
     60a:	2c06      	cmp	r4, #6
     60c:	d003      	beq.n	616 <__gnu_Unwind_RaiseException+0x56>
     60e:	2009      	movs	r0, #9
     610:	f50d 7d11 	add.w	sp, sp, #580	; 0x244
     614:	bdf0      	pop	{r4, r5, r6, r7, pc}
     616:	4630      	mov	r0, r6
     618:	4639      	mov	r1, r7
     61a:	f7ff ffb1 	bl	580 <unwind_phase2>
     61e:	bf00      	nop

00000620 <__gnu_Unwind_ForcedUnwind>:
     620:	b430      	push	{r4, r5}
     622:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
     624:	60c1      	str	r1, [r0, #12]
     626:	6182      	str	r2, [r0, #24]
     628:	4604      	mov	r4, r0
     62a:	4619      	mov	r1, r3
     62c:	2200      	movs	r2, #0
     62e:	641d      	str	r5, [r3, #64]	; 0x40
     630:	bc30      	pop	{r4, r5}
     632:	f7ff bf39 	b.w	4a8 <unwind_phase2_forced>
     636:	bf00      	nop

00000638 <__gnu_Unwind_Resume>:
     638:	b570      	push	{r4, r5, r6, lr}
     63a:	6943      	ldr	r3, [r0, #20]
     63c:	68c6      	ldr	r6, [r0, #12]
     63e:	640b      	str	r3, [r1, #64]	; 0x40
     640:	4604      	mov	r4, r0
     642:	460d      	mov	r5, r1
     644:	b126      	cbz	r6, 650 <__gnu_Unwind_Resume+0x18>
     646:	2201      	movs	r2, #1
     648:	f7ff ff2e 	bl	4a8 <unwind_phase2_forced>
     64c:	f7ff fe3a 	bl	2c4 <abort>
     650:	6903      	ldr	r3, [r0, #16]
     652:	4621      	mov	r1, r4
     654:	2002      	movs	r0, #2
     656:	462a      	mov	r2, r5
     658:	4798      	blx	r3
     65a:	2807      	cmp	r0, #7
     65c:	d003      	beq.n	666 <__gnu_Unwind_Resume+0x2e>
     65e:	2808      	cmp	r0, #8
     660:	d008      	beq.n	674 <__gnu_Unwind_Resume+0x3c>
     662:	f7ff fe2f 	bl	2c4 <abort>
     666:	4630      	mov	r0, r6
     668:	6c29      	ldr	r1, [r5, #64]	; 0x40
     66a:	f7ff ff1b 	bl	4a4 <_Unwind_DebugHook>
     66e:	1d28      	adds	r0, r5, #4
     670:	f000 fc14 	bl	e9c <__restore_core_regs>
     674:	4620      	mov	r0, r4
     676:	4629      	mov	r1, r5
     678:	f7ff ff82 	bl	580 <unwind_phase2>

0000067c <__gnu_Unwind_Resume_or_Rethrow>:
     67c:	68c2      	ldr	r2, [r0, #12]
     67e:	b410      	push	{r4}
     680:	b12a      	cbz	r2, 68e <__gnu_Unwind_Resume_or_Rethrow+0x12>
     682:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
     684:	2200      	movs	r2, #0
     686:	640c      	str	r4, [r1, #64]	; 0x40
     688:	bc10      	pop	{r4}
     68a:	f7ff bf0d 	b.w	4a8 <unwind_phase2_forced>
     68e:	bc10      	pop	{r4}
     690:	f7ff bf96 	b.w	5c0 <__gnu_Unwind_RaiseException>

00000694 <_Unwind_Complete>:
     694:	4770      	bx	lr
     696:	bf00      	nop

00000698 <_Unwind_DeleteException>:
     698:	b508      	push	{r3, lr}
     69a:	6883      	ldr	r3, [r0, #8]
     69c:	4601      	mov	r1, r0
     69e:	b10b      	cbz	r3, 6a4 <_Unwind_DeleteException+0xc>
     6a0:	2001      	movs	r0, #1
     6a2:	4798      	blx	r3
     6a4:	bd08      	pop	{r3, pc}
     6a6:	bf00      	nop

000006a8 <_Unwind_VRS_Get>:
     6a8:	b911      	cbnz	r1, 6b0 <_Unwind_VRS_Get+0x8>
     6aa:	b133      	cbz	r3, 6ba <_Unwind_VRS_Get+0x12>
     6ac:	2002      	movs	r0, #2
     6ae:	4770      	bx	lr
     6b0:	2904      	cmp	r1, #4
     6b2:	bf8c      	ite	hi
     6b4:	2002      	movhi	r0, #2
     6b6:	2001      	movls	r0, #1
     6b8:	4770      	bx	lr
     6ba:	2a0f      	cmp	r2, #15
     6bc:	d8f6      	bhi.n	6ac <_Unwind_VRS_Get+0x4>
     6be:	eb00 0282 	add.w	r2, r0, r2, lsl #2
     6c2:	4618      	mov	r0, r3
     6c4:	6851      	ldr	r1, [r2, #4]
     6c6:	9b00      	ldr	r3, [sp, #0]
     6c8:	6019      	str	r1, [r3, #0]
     6ca:	4770      	bx	lr

000006cc <_Unwind_GetGR>:
     6cc:	b500      	push	{lr}
     6ce:	b085      	sub	sp, #20
     6d0:	460a      	mov	r2, r1
     6d2:	ab03      	add	r3, sp, #12
     6d4:	2100      	movs	r1, #0
     6d6:	9300      	str	r3, [sp, #0]
     6d8:	460b      	mov	r3, r1
     6da:	f7ff ffe5 	bl	6a8 <_Unwind_VRS_Get>
     6de:	9803      	ldr	r0, [sp, #12]
     6e0:	b005      	add	sp, #20
     6e2:	bd00      	pop	{pc}

000006e4 <_Unwind_VRS_Set>:
     6e4:	b911      	cbnz	r1, 6ec <_Unwind_VRS_Set+0x8>
     6e6:	b133      	cbz	r3, 6f6 <_Unwind_VRS_Set+0x12>
     6e8:	2002      	movs	r0, #2
     6ea:	4770      	bx	lr
     6ec:	2904      	cmp	r1, #4
     6ee:	bf8c      	ite	hi
     6f0:	2002      	movhi	r0, #2
     6f2:	2001      	movls	r0, #1
     6f4:	4770      	bx	lr
     6f6:	2a0f      	cmp	r2, #15
     6f8:	d8f6      	bhi.n	6e8 <_Unwind_VRS_Set+0x4>
     6fa:	9900      	ldr	r1, [sp, #0]
     6fc:	eb00 0282 	add.w	r2, r0, r2, lsl #2
     700:	6809      	ldr	r1, [r1, #0]
     702:	4618      	mov	r0, r3
     704:	6051      	str	r1, [r2, #4]
     706:	4770      	bx	lr

00000708 <_Unwind_SetGR>:
     708:	b510      	push	{r4, lr}
     70a:	b084      	sub	sp, #16
     70c:	ab04      	add	r3, sp, #16
     70e:	460c      	mov	r4, r1
     710:	f843 2d04 	str.w	r2, [r3, #-4]!
     714:	2100      	movs	r1, #0
     716:	9300      	str	r3, [sp, #0]
     718:	4622      	mov	r2, r4
     71a:	460b      	mov	r3, r1
     71c:	f7ff ffe2 	bl	6e4 <_Unwind_VRS_Set>
     720:	b004      	add	sp, #16
     722:	bd10      	pop	{r4, pc}

00000724 <__gnu_unwind_pr_common>:
     724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     728:	6cce      	ldr	r6, [r1, #76]	; 0x4c
     72a:	b08d      	sub	sp, #52	; 0x34
     72c:	460c      	mov	r4, r1
     72e:	f856 1b04 	ldr.w	r1, [r6], #4
     732:	461d      	mov	r5, r3
     734:	4617      	mov	r7, r2
     736:	f000 0803 	and.w	r8, r0, #3
     73a:	9109      	str	r1, [sp, #36]	; 0x24
     73c:	960a      	str	r6, [sp, #40]	; 0x28
     73e:	b9e3      	cbnz	r3, 77a <__gnu_unwind_pr_common+0x56>
     740:	0209      	lsls	r1, r1, #8
     742:	2203      	movs	r2, #3
     744:	9109      	str	r1, [sp, #36]	; 0x24
     746:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
     74a:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
     74e:	6d23      	ldr	r3, [r4, #80]	; 0x50
     750:	f1b8 0f02 	cmp.w	r8, #2
     754:	bf08      	it	eq
     756:	6ba6      	ldreq	r6, [r4, #56]	; 0x38
     758:	f013 0101 	ands.w	r1, r3, #1
     75c:	d01b      	beq.n	796 <__gnu_unwind_pr_common+0x72>
     75e:	2000      	movs	r0, #0
     760:	9002      	str	r0, [sp, #8]
     762:	2d02      	cmp	r5, #2
     764:	f340 8089 	ble.w	87a <__gnu_unwind_pr_common+0x156>
     768:	f7ff fe9a 	bl	4a0 <__gnu_unwind_24bit.isra.1>
     76c:	2800      	cmp	r0, #0
     76e:	f000 808b 	beq.w	888 <__gnu_unwind_pr_common+0x164>
     772:	2009      	movs	r0, #9
     774:	b00d      	add	sp, #52	; 0x34
     776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
     77a:	2b02      	cmp	r3, #2
     77c:	dce7      	bgt.n	74e <__gnu_unwind_pr_common+0x2a>
     77e:	0c0b      	lsrs	r3, r1, #16
     780:	b2da      	uxtb	r2, r3
     782:	0409      	lsls	r1, r1, #16
     784:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
     788:	2302      	movs	r3, #2
     78a:	9109      	str	r1, [sp, #36]	; 0x24
     78c:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
     790:	eb06 0682 	add.w	r6, r6, r2, lsl #2
     794:	e7db      	b.n	74e <__gnu_unwind_pr_common+0x2a>
     796:	f000 0308 	and.w	r3, r0, #8
     79a:	9102      	str	r1, [sp, #8]
     79c:	f104 0258 	add.w	r2, r4, #88	; 0x58
     7a0:	b2d9      	uxtb	r1, r3
     7a2:	9203      	str	r2, [sp, #12]
     7a4:	9104      	str	r1, [sp, #16]
     7a6:	f8d6 9000 	ldr.w	r9, [r6]
     7aa:	f1b9 0f00 	cmp.w	r9, #0
     7ae:	d0d8      	beq.n	762 <__gnu_unwind_pr_common+0x3e>
     7b0:	2d02      	cmp	r5, #2
     7b2:	d041      	beq.n	838 <__gnu_unwind_pr_common+0x114>
     7b4:	f8b6 9000 	ldrh.w	r9, [r6]
     7b8:	f8b6 a002 	ldrh.w	sl, [r6, #2]
     7bc:	3604      	adds	r6, #4
     7be:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     7c0:	210f      	movs	r1, #15
     7c2:	f02a 0b01 	bic.w	fp, sl, #1
     7c6:	4638      	mov	r0, r7
     7c8:	449b      	add	fp, r3
     7ca:	f7ff ff7f 	bl	6cc <_Unwind_GetGR>
     7ce:	4583      	cmp	fp, r0
     7d0:	d818      	bhi.n	804 <__gnu_unwind_pr_common+0xe0>
     7d2:	f029 0201 	bic.w	r2, r9, #1
     7d6:	4493      	add	fp, r2
     7d8:	4558      	cmp	r0, fp
     7da:	bf2c      	ite	cs
     7dc:	2000      	movcs	r0, #0
     7de:	2001      	movcc	r0, #1
     7e0:	f00a 0a01 	and.w	sl, sl, #1
     7e4:	f009 0901 	and.w	r9, r9, #1
     7e8:	ea49 094a 	orr.w	r9, r9, sl, lsl #1
     7ec:	f1b9 0f01 	cmp.w	r9, #1
     7f0:	d026      	beq.n	840 <__gnu_unwind_pr_common+0x11c>
     7f2:	d209      	bcs.n	808 <__gnu_unwind_pr_common+0xe4>
     7f4:	f1b8 0f00 	cmp.w	r8, #0
     7f8:	d002      	beq.n	800 <__gnu_unwind_pr_common+0xdc>
     7fa:	2800      	cmp	r0, #0
     7fc:	f040 8104 	bne.w	a08 <__gnu_unwind_pr_common+0x2e4>
     800:	3604      	adds	r6, #4
     802:	e7d0      	b.n	7a6 <__gnu_unwind_pr_common+0x82>
     804:	2000      	movs	r0, #0
     806:	e7eb      	b.n	7e0 <__gnu_unwind_pr_common+0xbc>
     808:	f1b9 0f02 	cmp.w	r9, #2
     80c:	d1b1      	bne.n	772 <__gnu_unwind_pr_common+0x4e>
     80e:	6833      	ldr	r3, [r6, #0]
     810:	f023 4a00 	bic.w	sl, r3, #2147483648	; 0x80000000
     814:	f1b8 0f00 	cmp.w	r8, #0
     818:	d13c      	bne.n	894 <__gnu_unwind_pr_common+0x170>
     81a:	b130      	cbz	r0, 82a <__gnu_unwind_pr_common+0x106>
     81c:	9a04      	ldr	r2, [sp, #16]
     81e:	2a00      	cmp	r2, #0
     820:	d060      	beq.n	8e4 <__gnu_unwind_pr_common+0x1c0>
     822:	f1ba 0f00 	cmp.w	sl, #0
     826:	f000 80c3 	beq.w	9b0 <__gnu_unwind_pr_common+0x28c>
     82a:	2b00      	cmp	r3, #0
     82c:	db3e      	blt.n	8ac <__gnu_unwind_pr_common+0x188>
     82e:	f10a 0a01 	add.w	sl, sl, #1
     832:	eb06 068a 	add.w	r6, r6, sl, lsl #2
     836:	e7b6      	b.n	7a6 <__gnu_unwind_pr_common+0x82>
     838:	f8d6 a004 	ldr.w	sl, [r6, #4]
     83c:	3608      	adds	r6, #8
     83e:	e7be      	b.n	7be <__gnu_unwind_pr_common+0x9a>
     840:	f1b8 0f00 	cmp.w	r8, #0
     844:	d134      	bne.n	8b0 <__gnu_unwind_pr_common+0x18c>
     846:	b1b0      	cbz	r0, 876 <__gnu_unwind_pr_common+0x152>
     848:	6871      	ldr	r1, [r6, #4]
     84a:	f8d6 9000 	ldr.w	r9, [r6]
     84e:	1c8a      	adds	r2, r1, #2
     850:	d08f      	beq.n	772 <__gnu_unwind_pr_common+0x4e>
     852:	9b03      	ldr	r3, [sp, #12]
     854:	9308      	str	r3, [sp, #32]
     856:	1c4b      	adds	r3, r1, #1
     858:	f000 80bc 	beq.w	9d4 <__gnu_unwind_pr_common+0x2b0>
     85c:	1d30      	adds	r0, r6, #4
     85e:	f7ff fe19 	bl	494 <_Unwind_decode_typeinfo_ptr.isra.0>
     862:	ea4f 72d9 	mov.w	r2, r9, lsr #31
     866:	4601      	mov	r1, r0
     868:	ab08      	add	r3, sp, #32
     86a:	4620      	mov	r0, r4
     86c:	f3af 8000 	nop.w
     870:	2800      	cmp	r0, #0
     872:	f040 80f3 	bne.w	a5c <__gnu_unwind_pr_common+0x338>
     876:	3608      	adds	r6, #8
     878:	e795      	b.n	7a6 <__gnu_unwind_pr_common+0x82>
     87a:	4638      	mov	r0, r7
     87c:	a909      	add	r1, sp, #36	; 0x24
     87e:	f000 fc09 	bl	1094 <__gnu_unwind_execute>
     882:	2800      	cmp	r0, #0
     884:	f47f af75 	bne.w	772 <__gnu_unwind_pr_common+0x4e>
     888:	9802      	ldr	r0, [sp, #8]
     88a:	2800      	cmp	r0, #0
     88c:	f040 80ac 	bne.w	9e8 <__gnu_unwind_pr_common+0x2c4>
     890:	2008      	movs	r0, #8
     892:	e76f      	b.n	774 <__gnu_unwind_pr_common+0x50>
     894:	210d      	movs	r1, #13
     896:	4638      	mov	r0, r7
     898:	f8d4 9020 	ldr.w	r9, [r4, #32]
     89c:	f7ff ff16 	bl	6cc <_Unwind_GetGR>
     8a0:	4581      	cmp	r9, r0
     8a2:	f000 80c4 	beq.w	a2e <__gnu_unwind_pr_common+0x30a>
     8a6:	6833      	ldr	r3, [r6, #0]
     8a8:	2b00      	cmp	r3, #0
     8aa:	dac0      	bge.n	82e <__gnu_unwind_pr_common+0x10a>
     8ac:	3604      	adds	r6, #4
     8ae:	e7be      	b.n	82e <__gnu_unwind_pr_common+0x10a>
     8b0:	210d      	movs	r1, #13
     8b2:	4638      	mov	r0, r7
     8b4:	f8d4 9020 	ldr.w	r9, [r4, #32]
     8b8:	f7ff ff08 	bl	6cc <_Unwind_GetGR>
     8bc:	4581      	cmp	r9, r0
     8be:	d1da      	bne.n	876 <__gnu_unwind_pr_common+0x152>
     8c0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
     8c2:	4286      	cmp	r6, r0
     8c4:	d1d7      	bne.n	876 <__gnu_unwind_pr_common+0x152>
     8c6:	4630      	mov	r0, r6
     8c8:	f7ff fd16 	bl	2f8 <selfrel_offset31>
     8cc:	210f      	movs	r1, #15
     8ce:	4602      	mov	r2, r0
     8d0:	4638      	mov	r0, r7
     8d2:	f7ff ff19 	bl	708 <_Unwind_SetGR>
     8d6:	4638      	mov	r0, r7
     8d8:	2100      	movs	r1, #0
     8da:	4622      	mov	r2, r4
     8dc:	f7ff ff14 	bl	708 <_Unwind_SetGR>
     8e0:	2007      	movs	r0, #7
     8e2:	e747      	b.n	774 <__gnu_unwind_pr_common+0x50>
     8e4:	f1ba 0f00 	cmp.w	sl, #0
     8e8:	d062      	beq.n	9b0 <__gnu_unwind_pr_common+0x28c>
     8ea:	f106 0c04 	add.w	ip, r6, #4
     8ee:	9a03      	ldr	r2, [sp, #12]
     8f0:	f8cd c004 	str.w	ip, [sp, #4]
     8f4:	f10a 31ff 	add.w	r1, sl, #4294967295	; 0xffffffff
     8f8:	f001 0301 	and.w	r3, r1, #1
     8fc:	4660      	mov	r0, ip
     8fe:	9305      	str	r3, [sp, #20]
     900:	9208      	str	r2, [sp, #32]
     902:	f7ff fdc7 	bl	494 <_Unwind_decode_typeinfo_ptr.isra.0>
     906:	9a04      	ldr	r2, [sp, #16]
     908:	4601      	mov	r1, r0
     90a:	ab08      	add	r3, sp, #32
     90c:	4620      	mov	r0, r4
     90e:	4691      	mov	r9, r2
     910:	f3af 8000 	nop.w
     914:	f04f 0b01 	mov.w	fp, #1
     918:	f8dd c004 	ldr.w	ip, [sp, #4]
     91c:	2800      	cmp	r0, #0
     91e:	d155      	bne.n	9cc <__gnu_unwind_pr_common+0x2a8>
     920:	45d3      	cmp	fp, sl
     922:	f10c 0e04 	add.w	lr, ip, #4
     926:	46d9      	mov	r9, fp
     928:	d042      	beq.n	9b0 <__gnu_unwind_pr_common+0x28c>
     92a:	9805      	ldr	r0, [sp, #20]
     92c:	b1b8      	cbz	r0, 95e <__gnu_unwind_pr_common+0x23a>
     92e:	9903      	ldr	r1, [sp, #12]
     930:	f8cd e004 	str.w	lr, [sp, #4]
     934:	4670      	mov	r0, lr
     936:	9108      	str	r1, [sp, #32]
     938:	f7ff fdac 	bl	494 <_Unwind_decode_typeinfo_ptr.isra.0>
     93c:	2200      	movs	r2, #0
     93e:	4601      	mov	r1, r0
     940:	ab08      	add	r3, sp, #32
     942:	4620      	mov	r0, r4
     944:	f3af 8000 	nop.w
     948:	f10b 0b01 	add.w	fp, fp, #1
     94c:	f8dd c004 	ldr.w	ip, [sp, #4]
     950:	2800      	cmp	r0, #0
     952:	d13b      	bne.n	9cc <__gnu_unwind_pr_common+0x2a8>
     954:	45d3      	cmp	fp, sl
     956:	46d9      	mov	r9, fp
     958:	f10c 0e04 	add.w	lr, ip, #4
     95c:	d028      	beq.n	9b0 <__gnu_unwind_pr_common+0x28c>
     95e:	9507      	str	r5, [sp, #28]
     960:	9d03      	ldr	r5, [sp, #12]
     962:	9605      	str	r6, [sp, #20]
     964:	f8cd 8018 	str.w	r8, [sp, #24]
     968:	46f3      	mov	fp, lr
     96a:	4658      	mov	r0, fp
     96c:	9508      	str	r5, [sp, #32]
     96e:	f7ff fd91 	bl	494 <_Unwind_decode_typeinfo_ptr.isra.0>
     972:	2200      	movs	r2, #0
     974:	4601      	mov	r1, r0
     976:	ab08      	add	r3, sp, #32
     978:	4620      	mov	r0, r4
     97a:	f3af 8000 	nop.w
     97e:	f10b 0804 	add.w	r8, fp, #4
     982:	4606      	mov	r6, r0
     984:	f10b 0b08 	add.w	fp, fp, #8
     988:	4640      	mov	r0, r8
     98a:	f109 0801 	add.w	r8, r9, #1
     98e:	b9ce      	cbnz	r6, 9c4 <__gnu_unwind_pr_common+0x2a0>
     990:	9508      	str	r5, [sp, #32]
     992:	f7ff fd7f 	bl	494 <_Unwind_decode_typeinfo_ptr.isra.0>
     996:	4632      	mov	r2, r6
     998:	4601      	mov	r1, r0
     99a:	ab08      	add	r3, sp, #32
     99c:	4620      	mov	r0, r4
     99e:	46c1      	mov	r9, r8
     9a0:	f3af 8000 	nop.w
     9a4:	b970      	cbnz	r0, 9c4 <__gnu_unwind_pr_common+0x2a0>
     9a6:	f108 0901 	add.w	r9, r8, #1
     9aa:	45d1      	cmp	r9, sl
     9ac:	d1dd      	bne.n	96a <__gnu_unwind_pr_common+0x246>
     9ae:	9e05      	ldr	r6, [sp, #20]
     9b0:	4638      	mov	r0, r7
     9b2:	210d      	movs	r1, #13
     9b4:	f7ff fe8a 	bl	6cc <_Unwind_GetGR>
     9b8:	9a08      	ldr	r2, [sp, #32]
     9ba:	6220      	str	r0, [r4, #32]
     9bc:	6262      	str	r2, [r4, #36]	; 0x24
     9be:	62a6      	str	r6, [r4, #40]	; 0x28
     9c0:	2006      	movs	r0, #6
     9c2:	e6d7      	b.n	774 <__gnu_unwind_pr_common+0x50>
     9c4:	9e05      	ldr	r6, [sp, #20]
     9c6:	f8dd 8018 	ldr.w	r8, [sp, #24]
     9ca:	9d07      	ldr	r5, [sp, #28]
     9cc:	45ca      	cmp	sl, r9
     9ce:	f47f af6a 	bne.w	8a6 <__gnu_unwind_pr_common+0x182>
     9d2:	e7ed      	b.n	9b0 <__gnu_unwind_pr_common+0x28c>
     9d4:	4638      	mov	r0, r7
     9d6:	210d      	movs	r1, #13
     9d8:	f7ff fe78 	bl	6cc <_Unwind_GetGR>
     9dc:	6220      	str	r0, [r4, #32]
     9de:	9908      	ldr	r1, [sp, #32]
     9e0:	6261      	str	r1, [r4, #36]	; 0x24
     9e2:	62a6      	str	r6, [r4, #40]	; 0x28
     9e4:	2006      	movs	r0, #6
     9e6:	e6c5      	b.n	774 <__gnu_unwind_pr_common+0x50>
     9e8:	210f      	movs	r1, #15
     9ea:	4638      	mov	r0, r7
     9ec:	f7ff fe6e 	bl	6cc <_Unwind_GetGR>
     9f0:	210e      	movs	r1, #14
     9f2:	4602      	mov	r2, r0
     9f4:	4638      	mov	r0, r7
     9f6:	f7ff fe87 	bl	708 <_Unwind_SetGR>
     9fa:	4638      	mov	r0, r7
     9fc:	210f      	movs	r1, #15
     9fe:	4a1f      	ldr	r2, [pc, #124]	; (a7c <__gnu_unwind_pr_common+0x358>)
     a00:	f7ff fe82 	bl	708 <_Unwind_SetGR>
     a04:	2007      	movs	r0, #7
     a06:	e6b5      	b.n	774 <__gnu_unwind_pr_common+0x50>
     a08:	4630      	mov	r0, r6
     a0a:	f7ff fc75 	bl	2f8 <selfrel_offset31>
     a0e:	3604      	adds	r6, #4
     a10:	4605      	mov	r5, r0
     a12:	63a6      	str	r6, [r4, #56]	; 0x38
     a14:	4620      	mov	r0, r4
     a16:	f3af 8000 	nop.w
     a1a:	2800      	cmp	r0, #0
     a1c:	f43f aea9 	beq.w	772 <__gnu_unwind_pr_common+0x4e>
     a20:	4638      	mov	r0, r7
     a22:	210f      	movs	r1, #15
     a24:	462a      	mov	r2, r5
     a26:	f7ff fe6f 	bl	708 <_Unwind_SetGR>
     a2a:	2007      	movs	r0, #7
     a2c:	e6a2      	b.n	774 <__gnu_unwind_pr_common+0x50>
     a2e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
     a30:	428e      	cmp	r6, r1
     a32:	f47f af38 	bne.w	8a6 <__gnu_unwind_pr_common+0x182>
     a36:	1d30      	adds	r0, r6, #4
     a38:	2300      	movs	r3, #0
     a3a:	2204      	movs	r2, #4
     a3c:	f8c4 a028 	str.w	sl, [r4, #40]	; 0x28
     a40:	62e3      	str	r3, [r4, #44]	; 0x2c
     a42:	6322      	str	r2, [r4, #48]	; 0x30
     a44:	6360      	str	r0, [r4, #52]	; 0x34
     a46:	6831      	ldr	r1, [r6, #0]
     a48:	2900      	cmp	r1, #0
     a4a:	db02      	blt.n	a52 <__gnu_unwind_pr_common+0x32e>
     a4c:	2001      	movs	r0, #1
     a4e:	9002      	str	r0, [sp, #8]
     a50:	e6ed      	b.n	82e <__gnu_unwind_pr_common+0x10a>
     a52:	f10a 0301 	add.w	r3, sl, #1
     a56:	eb06 0083 	add.w	r0, r6, r3, lsl #2
     a5a:	e735      	b.n	8c8 <__gnu_unwind_pr_common+0x1a4>
     a5c:	4602      	mov	r2, r0
     a5e:	210d      	movs	r1, #13
     a60:	4638      	mov	r0, r7
     a62:	9201      	str	r2, [sp, #4]
     a64:	f7ff fe32 	bl	6cc <_Unwind_GetGR>
     a68:	6220      	str	r0, [r4, #32]
     a6a:	9801      	ldr	r0, [sp, #4]
     a6c:	2802      	cmp	r0, #2
     a6e:	d1b6      	bne.n	9de <__gnu_unwind_pr_common+0x2ba>
     a70:	4623      	mov	r3, r4
     a72:	9a08      	ldr	r2, [sp, #32]
     a74:	f843 2f2c 	str.w	r2, [r3, #44]!
     a78:	6263      	str	r3, [r4, #36]	; 0x24
     a7a:	e7b2      	b.n	9e2 <__gnu_unwind_pr_common+0x2be>
     a7c:	00000000 	.word	0x00000000

00000a80 <__aeabi_unwind_cpp_pr2>:
     a80:	2302      	movs	r3, #2
     a82:	f7ff be4f 	b.w	724 <__gnu_unwind_pr_common>
     a86:	bf00      	nop

00000a88 <__aeabi_unwind_cpp_pr1>:
     a88:	2301      	movs	r3, #1
     a8a:	f7ff be4b 	b.w	724 <__gnu_unwind_pr_common>
     a8e:	bf00      	nop

00000a90 <__aeabi_unwind_cpp_pr0>:
     a90:	2300      	movs	r3, #0
     a92:	f7ff be47 	b.w	724 <__gnu_unwind_pr_common>
     a96:	bf00      	nop

00000a98 <__gnu_Unwind_Backtrace>:
     a98:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
     a9a:	b5f0      	push	{r4, r5, r6, r7, lr}
     a9c:	6413      	str	r3, [r2, #64]	; 0x40
     a9e:	1d15      	adds	r5, r2, #4
     aa0:	4607      	mov	r7, r0
     aa2:	460e      	mov	r6, r1
     aa4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
     aa6:	f5ad 7d27 	sub.w	sp, sp, #668	; 0x29c
     aaa:	ac17      	add	r4, sp, #92	; 0x5c
     aac:	c40f      	stmia	r4!, {r0, r1, r2, r3}
     aae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
     ab0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
     ab2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
     ab4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
     ab6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
     aba:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
     abe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     ac2:	9016      	str	r0, [sp, #88]	; 0x58
     ac4:	9926      	ldr	r1, [sp, #152]	; 0x98
     ac6:	4668      	mov	r0, sp
     ac8:	f7ff fc94 	bl	3f4 <get_eit_entry>
     acc:	466a      	mov	r2, sp
     ace:	210c      	movs	r1, #12
     ad0:	b980      	cbnz	r0, af4 <__gnu_Unwind_Backtrace+0x5c>
     ad2:	a816      	add	r0, sp, #88	; 0x58
     ad4:	f7ff fe18 	bl	708 <_Unwind_SetGR>
     ad8:	4631      	mov	r1, r6
     ada:	a816      	add	r0, sp, #88	; 0x58
     adc:	47b8      	blx	r7
     ade:	4669      	mov	r1, sp
     ae0:	aa16      	add	r2, sp, #88	; 0x58
     ae2:	b938      	cbnz	r0, af4 <__gnu_Unwind_Backtrace+0x5c>
     ae4:	2008      	movs	r0, #8
     ae6:	9b04      	ldr	r3, [sp, #16]
     ae8:	4798      	blx	r3
     aea:	2805      	cmp	r0, #5
     aec:	4604      	mov	r4, r0
     aee:	d002      	beq.n	af6 <__gnu_Unwind_Backtrace+0x5e>
     af0:	2809      	cmp	r0, #9
     af2:	d1e7      	bne.n	ac4 <__gnu_Unwind_Backtrace+0x2c>
     af4:	2409      	movs	r4, #9
     af6:	a816      	add	r0, sp, #88	; 0x58
     af8:	f7ff fc50 	bl	39c <restore_non_core_regs>
     afc:	4620      	mov	r0, r4
     afe:	f50d 7d27 	add.w	sp, sp, #668	; 0x29c
     b02:	bdf0      	pop	{r4, r5, r6, r7, pc}

00000b04 <_Unwind_VRS_Pop>:
     b04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
     b08:	4604      	mov	r4, r0
     b0a:	b0e8      	sub	sp, #416	; 0x1a0
     b0c:	2904      	cmp	r1, #4
     b0e:	d80c      	bhi.n	b2a <_Unwind_VRS_Pop+0x26>
     b10:	e8df f001 	tbb	[pc, r1]
     b14:	93910338 	.word	0x93910338
     b18:	0f          	.byte	0x0f
     b19:	00          	.byte	0x00
     b1a:	0c15      	lsrs	r5, r2, #16
     b1c:	2b01      	cmp	r3, #1
     b1e:	b296      	uxth	r6, r2
     b20:	f000 8175 	beq.w	e0e <_Unwind_VRS_Pop+0x30a>
     b24:	2b05      	cmp	r3, #5
     b26:	f000 80c4 	beq.w	cb2 <_Unwind_VRS_Pop+0x1ae>
     b2a:	2002      	movs	r0, #2
     b2c:	b068      	add	sp, #416	; 0x1a0
     b2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
     b32:	2b00      	cmp	r3, #0
     b34:	d1f9      	bne.n	b2a <_Unwind_VRS_Pop+0x26>
     b36:	2a10      	cmp	r2, #16
     b38:	d8f7      	bhi.n	b2a <_Unwind_VRS_Pop+0x26>
     b3a:	6823      	ldr	r3, [r4, #0]
     b3c:	06d8      	lsls	r0, r3, #27
     b3e:	f100 8175 	bmi.w	e2c <_Unwind_VRS_Pop+0x328>
     b42:	a802      	add	r0, sp, #8
     b44:	9201      	str	r2, [sp, #4]
     b46:	f000 fa1b 	bl	f80 <__gnu_Unwind_Save_WMMXC>
     b4a:	9a01      	ldr	r2, [sp, #4]
     b4c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     b4e:	07d1      	lsls	r1, r2, #31
     b50:	bf44      	itt	mi
     b52:	f853 1b04 	ldrmi.w	r1, [r3], #4
     b56:	9102      	strmi	r1, [sp, #8]
     b58:	0790      	lsls	r0, r2, #30
     b5a:	bf44      	itt	mi
     b5c:	f853 1b04 	ldrmi.w	r1, [r3], #4
     b60:	9103      	strmi	r1, [sp, #12]
     b62:	0750      	lsls	r0, r2, #29
     b64:	bf44      	itt	mi
     b66:	f853 0b04 	ldrmi.w	r0, [r3], #4
     b6a:	9004      	strmi	r0, [sp, #16]
     b6c:	0710      	lsls	r0, r2, #28
     b6e:	bf48      	it	mi
     b70:	f853 2b04 	ldrmi.w	r2, [r3], #4
     b74:	a802      	add	r0, sp, #8
     b76:	63a3      	str	r3, [r4, #56]	; 0x38
     b78:	bf48      	it	mi
     b7a:	9205      	strmi	r2, [sp, #20]
     b7c:	f000 f9f6 	bl	f6c <__gnu_Unwind_Restore_WMMXC>
     b80:	2000      	movs	r0, #0
     b82:	e7d3      	b.n	b2c <_Unwind_VRS_Pop+0x28>
     b84:	2b00      	cmp	r3, #0
     b86:	d1d0      	bne.n	b2a <_Unwind_VRS_Pop+0x26>
     b88:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     b8a:	07d0      	lsls	r0, r2, #31
     b8c:	bf44      	itt	mi
     b8e:	f853 1b04 	ldrmi.w	r1, [r3], #4
     b92:	6061      	strmi	r1, [r4, #4]
     b94:	0791      	lsls	r1, r2, #30
     b96:	bf44      	itt	mi
     b98:	f853 1b04 	ldrmi.w	r1, [r3], #4
     b9c:	60a1      	strmi	r1, [r4, #8]
     b9e:	0750      	lsls	r0, r2, #29
     ba0:	bf44      	itt	mi
     ba2:	f853 1b04 	ldrmi.w	r1, [r3], #4
     ba6:	60e1      	strmi	r1, [r4, #12]
     ba8:	0711      	lsls	r1, r2, #28
     baa:	bf44      	itt	mi
     bac:	f853 1b04 	ldrmi.w	r1, [r3], #4
     bb0:	6121      	strmi	r1, [r4, #16]
     bb2:	06d0      	lsls	r0, r2, #27
     bb4:	bf44      	itt	mi
     bb6:	f853 1b04 	ldrmi.w	r1, [r3], #4
     bba:	6161      	strmi	r1, [r4, #20]
     bbc:	0691      	lsls	r1, r2, #26
     bbe:	bf44      	itt	mi
     bc0:	f853 1b04 	ldrmi.w	r1, [r3], #4
     bc4:	61a1      	strmi	r1, [r4, #24]
     bc6:	0650      	lsls	r0, r2, #25
     bc8:	bf44      	itt	mi
     bca:	f853 1b04 	ldrmi.w	r1, [r3], #4
     bce:	61e1      	strmi	r1, [r4, #28]
     bd0:	0611      	lsls	r1, r2, #24
     bd2:	bf44      	itt	mi
     bd4:	f853 1b04 	ldrmi.w	r1, [r3], #4
     bd8:	6221      	strmi	r1, [r4, #32]
     bda:	05d0      	lsls	r0, r2, #23
     bdc:	bf44      	itt	mi
     bde:	f853 1b04 	ldrmi.w	r1, [r3], #4
     be2:	6261      	strmi	r1, [r4, #36]	; 0x24
     be4:	0591      	lsls	r1, r2, #22
     be6:	bf44      	itt	mi
     be8:	f853 1b04 	ldrmi.w	r1, [r3], #4
     bec:	62a1      	strmi	r1, [r4, #40]	; 0x28
     bee:	0550      	lsls	r0, r2, #21
     bf0:	bf44      	itt	mi
     bf2:	f853 1b04 	ldrmi.w	r1, [r3], #4
     bf6:	62e1      	strmi	r1, [r4, #44]	; 0x2c
     bf8:	0511      	lsls	r1, r2, #20
     bfa:	bf44      	itt	mi
     bfc:	f853 1b04 	ldrmi.w	r1, [r3], #4
     c00:	6321      	strmi	r1, [r4, #48]	; 0x30
     c02:	04d0      	lsls	r0, r2, #19
     c04:	bf44      	itt	mi
     c06:	f853 1b04 	ldrmi.w	r1, [r3], #4
     c0a:	6361      	strmi	r1, [r4, #52]	; 0x34
     c0c:	f412 5000 	ands.w	r0, r2, #8192	; 0x2000
     c10:	bf1c      	itt	ne
     c12:	f853 1b04 	ldrne.w	r1, [r3], #4
     c16:	63a1      	strne	r1, [r4, #56]	; 0x38
     c18:	0451      	lsls	r1, r2, #17
     c1a:	bf44      	itt	mi
     c1c:	f853 1b04 	ldrmi.w	r1, [r3], #4
     c20:	63e1      	strmi	r1, [r4, #60]	; 0x3c
     c22:	0412      	lsls	r2, r2, #16
     c24:	bf44      	itt	mi
     c26:	f853 2b04 	ldrmi.w	r2, [r3], #4
     c2a:	6422      	strmi	r2, [r4, #64]	; 0x40
     c2c:	2800      	cmp	r0, #0
     c2e:	f040 80ec 	bne.w	e0a <_Unwind_VRS_Pop+0x306>
     c32:	63a3      	str	r3, [r4, #56]	; 0x38
     c34:	e77a      	b.n	b2c <_Unwind_VRS_Pop+0x28>
     c36:	2001      	movs	r0, #1
     c38:	e778      	b.n	b2c <_Unwind_VRS_Pop+0x28>
     c3a:	2b03      	cmp	r3, #3
     c3c:	f47f af75 	bne.w	b2a <_Unwind_VRS_Pop+0x26>
     c40:	0c15      	lsrs	r5, r2, #16
     c42:	b296      	uxth	r6, r2
     c44:	1973      	adds	r3, r6, r5
     c46:	2b10      	cmp	r3, #16
     c48:	f63f af6f 	bhi.w	b2a <_Unwind_VRS_Pop+0x26>
     c4c:	6827      	ldr	r7, [r4, #0]
     c4e:	0739      	lsls	r1, r7, #28
     c50:	f100 80fe 	bmi.w	e50 <_Unwind_VRS_Pop+0x34c>
     c54:	a826      	add	r0, sp, #152	; 0x98
     c56:	f000 f967 	bl	f28 <__gnu_Unwind_Save_WMMXD>
     c5a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
     c5c:	0077      	lsls	r7, r6, #1
     c5e:	a926      	add	r1, sp, #152	; 0x98
     c60:	4603      	mov	r3, r0
     c62:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
     c66:	1e7a      	subs	r2, r7, #1
     c68:	b1ef      	cbz	r7, ca6 <_Unwind_VRS_Pop+0x1a2>
     c6a:	6801      	ldr	r1, [r0, #0]
     c6c:	462b      	mov	r3, r5
     c6e:	f002 0601 	and.w	r6, r2, #1
     c72:	f843 1b04 	str.w	r1, [r3], #4
     c76:	1eb9      	subs	r1, r7, #2
     c78:	b19a      	cbz	r2, ca2 <_Unwind_VRS_Pop+0x19e>
     c7a:	b136      	cbz	r6, c8a <_Unwind_VRS_Pop+0x186>
     c7c:	1b5a      	subs	r2, r3, r5
     c7e:	3901      	subs	r1, #1
     c80:	5812      	ldr	r2, [r2, r0]
     c82:	f843 2b04 	str.w	r2, [r3], #4
     c86:	1c4a      	adds	r2, r1, #1
     c88:	d00b      	beq.n	ca2 <_Unwind_VRS_Pop+0x19e>
     c8a:	1b5e      	subs	r6, r3, r5
     c8c:	461a      	mov	r2, r3
     c8e:	5836      	ldr	r6, [r6, r0]
     c90:	f842 6b04 	str.w	r6, [r2], #4
     c94:	1b56      	subs	r6, r2, r5
     c96:	3902      	subs	r1, #2
     c98:	5836      	ldr	r6, [r6, r0]
     c9a:	605e      	str	r6, [r3, #4]
     c9c:	1d13      	adds	r3, r2, #4
     c9e:	1c4a      	adds	r2, r1, #1
     ca0:	d1f3      	bne.n	c8a <_Unwind_VRS_Pop+0x186>
     ca2:	eb00 0387 	add.w	r3, r0, r7, lsl #2
     ca6:	a826      	add	r0, sp, #152	; 0x98
     ca8:	63a3      	str	r3, [r4, #56]	; 0x38
     caa:	f000 f91b 	bl	ee4 <__gnu_Unwind_Restore_WMMXD>
     cae:	2000      	movs	r0, #0
     cb0:	e73c      	b.n	b2c <_Unwind_VRS_Pop+0x28>
     cb2:	1977      	adds	r7, r6, r5
     cb4:	2f20      	cmp	r7, #32
     cb6:	f63f af38 	bhi.w	b2a <_Unwind_VRS_Pop+0x26>
     cba:	2d0f      	cmp	r5, #15
     cbc:	f240 80b1 	bls.w	e22 <_Unwind_VRS_Pop+0x31e>
     cc0:	46b2      	mov	sl, r6
     cc2:	b376      	cbz	r6, d22 <_Unwind_VRS_Pop+0x21e>
     cc4:	2d0f      	cmp	r5, #15
     cc6:	d811      	bhi.n	cec <_Unwind_VRS_Pop+0x1e8>
     cc8:	6822      	ldr	r2, [r4, #0]
     cca:	07d1      	lsls	r1, r2, #31
     ccc:	d50e      	bpl.n	cec <_Unwind_VRS_Pop+0x1e8>
     cce:	f022 0101 	bic.w	r1, r2, #1
     cd2:	2b05      	cmp	r3, #5
     cd4:	6021      	str	r1, [r4, #0]
     cd6:	4620      	mov	r0, r4
     cd8:	f000 80d6 	beq.w	e88 <_Unwind_VRS_Pop+0x384>
     cdc:	f022 0203 	bic.w	r2, r2, #3
     ce0:	f840 2b48 	str.w	r2, [r0], #72
     ce4:	9301      	str	r3, [sp, #4]
     ce6:	f000 f8e9 	bl	ebc <__gnu_Unwind_Save_VFP>
     cea:	9b01      	ldr	r3, [sp, #4]
     cec:	f1ba 0f00 	cmp.w	sl, #0
     cf0:	d003      	beq.n	cfa <_Unwind_VRS_Pop+0x1f6>
     cf2:	6822      	ldr	r2, [r4, #0]
     cf4:	0750      	lsls	r0, r2, #29
     cf6:	f100 80b3 	bmi.w	e60 <_Unwind_VRS_Pop+0x35c>
     cfa:	2b01      	cmp	r3, #1
     cfc:	f000 80ba 	beq.w	e74 <_Unwind_VRS_Pop+0x370>
     d00:	2d0f      	cmp	r5, #15
     d02:	d804      	bhi.n	d0e <_Unwind_VRS_Pop+0x20a>
     d04:	a846      	add	r0, sp, #280	; 0x118
     d06:	9301      	str	r3, [sp, #4]
     d08:	f000 f8e0 	bl	ecc <__gnu_Unwind_Save_VFP_D>
     d0c:	9b01      	ldr	r3, [sp, #4]
     d0e:	f1ba 0f00 	cmp.w	sl, #0
     d12:	d006      	beq.n	d22 <_Unwind_VRS_Pop+0x21e>
     d14:	a806      	add	r0, sp, #24
     d16:	9301      	str	r3, [sp, #4]
     d18:	f000 f8e0 	bl	edc <__gnu_Unwind_Save_VFP_D_16_to_31>
     d1c:	9b01      	ldr	r3, [sp, #4]
     d1e:	f1c5 0610 	rsb	r6, r5, #16
     d22:	f8d4 c038 	ldr.w	ip, [r4, #56]	; 0x38
     d26:	2e00      	cmp	r6, #0
     d28:	46e0      	mov	r8, ip
     d2a:	dd2c      	ble.n	d86 <_Unwind_VRS_Pop+0x282>
     d2c:	a846      	add	r0, sp, #280	; 0x118
     d2e:	eb00 08c5 	add.w	r8, r0, r5, lsl #3
     d32:	ea4f 0946 	mov.w	r9, r6, lsl #1
     d36:	f8dc 0000 	ldr.w	r0, [ip]
     d3a:	4642      	mov	r2, r8
     d3c:	f109 36ff 	add.w	r6, r9, #4294967295	; 0xffffffff
     d40:	f842 0b04 	str.w	r0, [r2], #4
     d44:	f006 0101 	and.w	r1, r6, #1
     d48:	f1a9 0002 	sub.w	r0, r9, #2
     d4c:	b1ce      	cbz	r6, d82 <_Unwind_VRS_Pop+0x27e>
     d4e:	b141      	cbz	r1, d62 <_Unwind_VRS_Pop+0x25e>
     d50:	ebc8 0102 	rsb	r1, r8, r2
     d54:	3801      	subs	r0, #1
     d56:	f851 100c 	ldr.w	r1, [r1, ip]
     d5a:	f842 1b04 	str.w	r1, [r2], #4
     d5e:	1c41      	adds	r1, r0, #1
     d60:	d00f      	beq.n	d82 <_Unwind_VRS_Pop+0x27e>
     d62:	ebc8 0602 	rsb	r6, r8, r2
     d66:	4611      	mov	r1, r2
     d68:	f856 600c 	ldr.w	r6, [r6, ip]
     d6c:	f841 6b04 	str.w	r6, [r1], #4
     d70:	ebc8 0601 	rsb	r6, r8, r1
     d74:	3802      	subs	r0, #2
     d76:	f856 600c 	ldr.w	r6, [r6, ip]
     d7a:	6056      	str	r6, [r2, #4]
     d7c:	1d0a      	adds	r2, r1, #4
     d7e:	1c41      	adds	r1, r0, #1
     d80:	d1ef      	bne.n	d62 <_Unwind_VRS_Pop+0x25e>
     d82:	eb0c 0889 	add.w	r8, ip, r9, lsl #2
     d86:	f1ba 0f00 	cmp.w	sl, #0
     d8a:	d02f      	beq.n	dec <_Unwind_VRS_Pop+0x2e8>
     d8c:	2d10      	cmp	r5, #16
     d8e:	bf2c      	ite	cs
     d90:	462a      	movcs	r2, r5
     d92:	2210      	movcc	r2, #16
     d94:	af68      	add	r7, sp, #416	; 0x1a0
     d96:	eb07 01c2 	add.w	r1, r7, r2, lsl #3
     d9a:	ea4f 0c4a 	mov.w	ip, sl, lsl #1
     d9e:	f8d8 0000 	ldr.w	r0, [r8]
     da2:	f5a1 7202 	sub.w	r2, r1, #520	; 0x208
     da6:	f10c 39ff 	add.w	r9, ip, #4294967295	; 0xffffffff
     daa:	f842 0b04 	str.w	r0, [r2], #4
     dae:	f009 0101 	and.w	r1, r9, #1
     db2:	4646      	mov	r6, r8
     db4:	f1ac 0002 	sub.w	r0, ip, #2
     db8:	f1b9 0f00 	cmp.w	r9, #0
     dbc:	d014      	beq.n	de8 <_Unwind_VRS_Pop+0x2e4>
     dbe:	b139      	cbz	r1, dd0 <_Unwind_VRS_Pop+0x2cc>
     dc0:	4646      	mov	r6, r8
     dc2:	3801      	subs	r0, #1
     dc4:	f856 1f04 	ldr.w	r1, [r6, #4]!
     dc8:	f842 1b04 	str.w	r1, [r2], #4
     dcc:	1c41      	adds	r1, r0, #1
     dce:	d00b      	beq.n	de8 <_Unwind_VRS_Pop+0x2e4>
     dd0:	f8d6 9004 	ldr.w	r9, [r6, #4]
     dd4:	4611      	mov	r1, r2
     dd6:	3802      	subs	r0, #2
     dd8:	f841 9b04 	str.w	r9, [r1], #4
     ddc:	68b7      	ldr	r7, [r6, #8]
     dde:	3608      	adds	r6, #8
     de0:	6057      	str	r7, [r2, #4]
     de2:	1d0a      	adds	r2, r1, #4
     de4:	1c41      	adds	r1, r0, #1
     de6:	d1f3      	bne.n	dd0 <_Unwind_VRS_Pop+0x2cc>
     de8:	eb08 088c 	add.w	r8, r8, ip, lsl #2
     dec:	2b01      	cmp	r3, #1
     dee:	d027      	beq.n	e40 <_Unwind_VRS_Pop+0x33c>
     df0:	2d0f      	cmp	r5, #15
     df2:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
     df6:	d802      	bhi.n	dfe <_Unwind_VRS_Pop+0x2fa>
     df8:	a846      	add	r0, sp, #280	; 0x118
     dfa:	f000 f863 	bl	ec4 <__gnu_Unwind_Restore_VFP_D>
     dfe:	f1ba 0f00 	cmp.w	sl, #0
     e02:	d002      	beq.n	e0a <_Unwind_VRS_Pop+0x306>
     e04:	a806      	add	r0, sp, #24
     e06:	f000 f865 	bl	ed4 <__gnu_Unwind_Restore_VFP_D_16_to_31>
     e0a:	2000      	movs	r0, #0
     e0c:	e68e      	b.n	b2c <_Unwind_VRS_Pop+0x28>
     e0e:	1971      	adds	r1, r6, r5
     e10:	2910      	cmp	r1, #16
     e12:	f63f ae8a 	bhi.w	b2a <_Unwind_VRS_Pop+0x26>
     e16:	2d0f      	cmp	r5, #15
     e18:	f63f ae87 	bhi.w	b2a <_Unwind_VRS_Pop+0x26>
     e1c:	f04f 0a00 	mov.w	sl, #0
     e20:	e752      	b.n	cc8 <_Unwind_VRS_Pop+0x1c4>
     e22:	2f10      	cmp	r7, #16
     e24:	d9fa      	bls.n	e1c <_Unwind_VRS_Pop+0x318>
     e26:	f1a7 0a10 	sub.w	sl, r7, #16
     e2a:	e74b      	b.n	cc4 <_Unwind_VRS_Pop+0x1c0>
     e2c:	f023 0010 	bic.w	r0, r3, #16
     e30:	6020      	str	r0, [r4, #0]
     e32:	f504 700c 	add.w	r0, r4, #560	; 0x230
     e36:	9201      	str	r2, [sp, #4]
     e38:	f000 f8a2 	bl	f80 <__gnu_Unwind_Save_WMMXC>
     e3c:	9a01      	ldr	r2, [sp, #4]
     e3e:	e680      	b.n	b42 <_Unwind_VRS_Pop+0x3e>
     e40:	f108 0304 	add.w	r3, r8, #4
     e44:	a846      	add	r0, sp, #280	; 0x118
     e46:	63a3      	str	r3, [r4, #56]	; 0x38
     e48:	f000 f834 	bl	eb4 <__gnu_Unwind_Restore_VFP>
     e4c:	2000      	movs	r0, #0
     e4e:	e66d      	b.n	b2c <_Unwind_VRS_Pop+0x28>
     e50:	f027 0208 	bic.w	r2, r7, #8
     e54:	6022      	str	r2, [r4, #0]
     e56:	f504 70d8 	add.w	r0, r4, #432	; 0x1b0
     e5a:	f000 f865 	bl	f28 <__gnu_Unwind_Save_WMMXD>
     e5e:	e6f9      	b.n	c54 <_Unwind_VRS_Pop+0x150>
     e60:	4620      	mov	r0, r4
     e62:	f022 0104 	bic.w	r1, r2, #4
     e66:	f840 1bd0 	str.w	r1, [r0], #208
     e6a:	9301      	str	r3, [sp, #4]
     e6c:	f000 f836 	bl	edc <__gnu_Unwind_Save_VFP_D_16_to_31>
     e70:	9b01      	ldr	r3, [sp, #4]
     e72:	e742      	b.n	cfa <_Unwind_VRS_Pop+0x1f6>
     e74:	a846      	add	r0, sp, #280	; 0x118
     e76:	9301      	str	r3, [sp, #4]
     e78:	f000 f820 	bl	ebc <__gnu_Unwind_Save_VFP>
     e7c:	9b01      	ldr	r3, [sp, #4]
     e7e:	f1ba 0f00 	cmp.w	sl, #0
     e82:	f47f af4c 	bne.w	d1e <_Unwind_VRS_Pop+0x21a>
     e86:	e74c      	b.n	d22 <_Unwind_VRS_Pop+0x21e>
     e88:	f041 0102 	orr.w	r1, r1, #2
     e8c:	f840 1b48 	str.w	r1, [r0], #72
     e90:	9301      	str	r3, [sp, #4]
     e92:	f000 f81b 	bl	ecc <__gnu_Unwind_Save_VFP_D>
     e96:	9b01      	ldr	r3, [sp, #4]
     e98:	e728      	b.n	cec <_Unwind_VRS_Pop+0x1e8>
     e9a:	bf00      	nop

00000e9c <__restore_core_regs>:
     e9c:	f100 0134 	add.w	r1, r0, #52	; 0x34
     ea0:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
     ea4:	469c      	mov	ip, r3
     ea6:	46a6      	mov	lr, r4
     ea8:	f84c 5d04 	str.w	r5, [ip, #-4]!
     eac:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
     eb0:	46e5      	mov	sp, ip
     eb2:	bd00      	pop	{pc}

00000eb4 <__gnu_Unwind_Restore_VFP>:
     eb4:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
     eb8:	4770      	bx	lr
     eba:	bf00      	nop

00000ebc <__gnu_Unwind_Save_VFP>:
     ebc:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
     ec0:	4770      	bx	lr
     ec2:	bf00      	nop

00000ec4 <__gnu_Unwind_Restore_VFP_D>:
     ec4:	ec90 0b20 	vldmia	r0, {d0-d15}
     ec8:	4770      	bx	lr
     eca:	bf00      	nop

00000ecc <__gnu_Unwind_Save_VFP_D>:
     ecc:	ec80 0b20 	vstmia	r0, {d0-d15}
     ed0:	4770      	bx	lr
     ed2:	bf00      	nop

00000ed4 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
     ed4:	ecd0 0b20 	vldmia	r0, {d16-d31}
     ed8:	4770      	bx	lr
     eda:	bf00      	nop

00000edc <__gnu_Unwind_Save_VFP_D_16_to_31>:
     edc:	ecc0 0b20 	vstmia	r0, {d16-d31}
     ee0:	4770      	bx	lr
     ee2:	bf00      	nop

00000ee4 <__gnu_Unwind_Restore_WMMXD>:
     ee4:	ecf0 0102 	ldfe	f0, [r0], #8
     ee8:	ecf0 1102 	ldfe	f1, [r0], #8
     eec:	ecf0 2102 	ldfe	f2, [r0], #8
     ef0:	ecf0 3102 	ldfe	f3, [r0], #8
     ef4:	ecf0 4102 	ldfe	f4, [r0], #8
     ef8:	ecf0 5102 	ldfe	f5, [r0], #8
     efc:	ecf0 6102 	ldfe	f6, [r0], #8
     f00:	ecf0 7102 	ldfe	f7, [r0], #8
     f04:	ecf0 8102 	ldfp	f0, [r0], #8
     f08:	ecf0 9102 	ldfp	f1, [r0], #8
     f0c:	ecf0 a102 	ldfp	f2, [r0], #8
     f10:	ecf0 b102 	ldfp	f3, [r0], #8
     f14:	ecf0 c102 	ldfp	f4, [r0], #8
     f18:	ecf0 d102 	ldfp	f5, [r0], #8
     f1c:	ecf0 e102 	ldfp	f6, [r0], #8
     f20:	ecf0 f102 	ldfp	f7, [r0], #8
     f24:	4770      	bx	lr
     f26:	bf00      	nop

00000f28 <__gnu_Unwind_Save_WMMXD>:
     f28:	ece0 0102 	stfe	f0, [r0], #8
     f2c:	ece0 1102 	stfe	f1, [r0], #8
     f30:	ece0 2102 	stfe	f2, [r0], #8
     f34:	ece0 3102 	stfe	f3, [r0], #8
     f38:	ece0 4102 	stfe	f4, [r0], #8
     f3c:	ece0 5102 	stfe	f5, [r0], #8
     f40:	ece0 6102 	stfe	f6, [r0], #8
     f44:	ece0 7102 	stfe	f7, [r0], #8
     f48:	ece0 8102 	stfp	f0, [r0], #8
     f4c:	ece0 9102 	stfp	f1, [r0], #8
     f50:	ece0 a102 	stfp	f2, [r0], #8
     f54:	ece0 b102 	stfp	f3, [r0], #8
     f58:	ece0 c102 	stfp	f4, [r0], #8
     f5c:	ece0 d102 	stfp	f5, [r0], #8
     f60:	ece0 e102 	stfp	f6, [r0], #8
     f64:	ece0 f102 	stfp	f7, [r0], #8
     f68:	4770      	bx	lr
     f6a:	bf00      	nop

00000f6c <__gnu_Unwind_Restore_WMMXC>:
     f6c:	fcb0 8101 	ldc2	1, cr8, [r0], #4
     f70:	fcb0 9101 	ldc2	1, cr9, [r0], #4
     f74:	fcb0 a101 	ldc2	1, cr10, [r0], #4
     f78:	fcb0 b101 	ldc2	1, cr11, [r0], #4
     f7c:	4770      	bx	lr
     f7e:	bf00      	nop

00000f80 <__gnu_Unwind_Save_WMMXC>:
     f80:	fca0 8101 	stc2	1, cr8, [r0], #4
     f84:	fca0 9101 	stc2	1, cr9, [r0], #4
     f88:	fca0 a101 	stc2	1, cr10, [r0], #4
     f8c:	fca0 b101 	stc2	1, cr11, [r0], #4
     f90:	4770      	bx	lr
     f92:	bf00      	nop

00000f94 <_Unwind_RaiseException>:
     f94:	46ec      	mov	ip, sp
     f96:	b500      	push	{lr}
     f98:	e92d 5000 	stmdb	sp!, {ip, lr}
     f9c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
     fa0:	f04f 0300 	mov.w	r3, #0
     fa4:	e92d 000c 	stmdb	sp!, {r2, r3}
     fa8:	a901      	add	r1, sp, #4
     faa:	f7ff fb09 	bl	5c0 <__gnu_Unwind_RaiseException>
     fae:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
     fb2:	b012      	add	sp, #72	; 0x48
     fb4:	4770      	bx	lr
     fb6:	bf00      	nop

00000fb8 <_Unwind_Resume>:
     fb8:	46ec      	mov	ip, sp
     fba:	b500      	push	{lr}
     fbc:	e92d 5000 	stmdb	sp!, {ip, lr}
     fc0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
     fc4:	f04f 0300 	mov.w	r3, #0
     fc8:	e92d 000c 	stmdb	sp!, {r2, r3}
     fcc:	a901      	add	r1, sp, #4
     fce:	f7ff fb33 	bl	638 <__gnu_Unwind_Resume>
     fd2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
     fd6:	b012      	add	sp, #72	; 0x48
     fd8:	4770      	bx	lr
     fda:	bf00      	nop

00000fdc <_Unwind_Resume_or_Rethrow>:
     fdc:	46ec      	mov	ip, sp
     fde:	b500      	push	{lr}
     fe0:	e92d 5000 	stmdb	sp!, {ip, lr}
     fe4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
     fe8:	f04f 0300 	mov.w	r3, #0
     fec:	e92d 000c 	stmdb	sp!, {r2, r3}
     ff0:	a901      	add	r1, sp, #4
     ff2:	f7ff fb43 	bl	67c <__gnu_Unwind_Resume_or_Rethrow>
     ff6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
     ffa:	b012      	add	sp, #72	; 0x48
     ffc:	4770      	bx	lr
     ffe:	bf00      	nop

00001000 <_Unwind_ForcedUnwind>:
    1000:	46ec      	mov	ip, sp
    1002:	b500      	push	{lr}
    1004:	e92d 5000 	stmdb	sp!, {ip, lr}
    1008:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    100c:	f04f 0300 	mov.w	r3, #0
    1010:	e92d 000c 	stmdb	sp!, {r2, r3}
    1014:	ab01      	add	r3, sp, #4
    1016:	f7ff fb03 	bl	620 <__gnu_Unwind_ForcedUnwind>
    101a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    101e:	b012      	add	sp, #72	; 0x48
    1020:	4770      	bx	lr
    1022:	bf00      	nop

00001024 <_Unwind_Backtrace>:
    1024:	46ec      	mov	ip, sp
    1026:	b500      	push	{lr}
    1028:	e92d 5000 	stmdb	sp!, {ip, lr}
    102c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    1030:	f04f 0300 	mov.w	r3, #0
    1034:	e92d 000c 	stmdb	sp!, {r2, r3}
    1038:	aa01      	add	r2, sp, #4
    103a:	f7ff fd2d 	bl	a98 <__gnu_Unwind_Backtrace>
    103e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    1042:	b012      	add	sp, #72	; 0x48
    1044:	4770      	bx	lr
    1046:	bf00      	nop

00001048 <next_unwind_byte>:
    1048:	7a02      	ldrb	r2, [r0, #8]
    104a:	4603      	mov	r3, r0
    104c:	b91a      	cbnz	r2, 1056 <next_unwind_byte+0xe>
    104e:	7a42      	ldrb	r2, [r0, #9]
    1050:	b942      	cbnz	r2, 1064 <next_unwind_byte+0x1c>
    1052:	20b0      	movs	r0, #176	; 0xb0
    1054:	4770      	bx	lr
    1056:	1e51      	subs	r1, r2, #1
    1058:	6800      	ldr	r0, [r0, #0]
    105a:	7219      	strb	r1, [r3, #8]
    105c:	0201      	lsls	r1, r0, #8
    105e:	6019      	str	r1, [r3, #0]
    1060:	0e00      	lsrs	r0, r0, #24
    1062:	4770      	bx	lr
    1064:	6841      	ldr	r1, [r0, #4]
    1066:	1e50      	subs	r0, r2, #1
    1068:	7258      	strb	r0, [r3, #9]
    106a:	f851 0b04 	ldr.w	r0, [r1], #4
    106e:	2203      	movs	r2, #3
    1070:	6059      	str	r1, [r3, #4]
    1072:	721a      	strb	r2, [r3, #8]
    1074:	e7f2      	b.n	105c <next_unwind_byte+0x14>
    1076:	bf00      	nop

00001078 <_Unwind_GetGR.constprop.0>:
    1078:	b500      	push	{lr}
    107a:	b085      	sub	sp, #20
    107c:	2100      	movs	r1, #0
    107e:	ab03      	add	r3, sp, #12
    1080:	9300      	str	r3, [sp, #0]
    1082:	220c      	movs	r2, #12
    1084:	460b      	mov	r3, r1
    1086:	f7ff fb0f 	bl	6a8 <_Unwind_VRS_Get>
    108a:	9803      	ldr	r0, [sp, #12]
    108c:	b005      	add	sp, #20
    108e:	bd00      	pop	{pc}

00001090 <unwind_UCB_from_context>:
    1090:	f7ff bff2 	b.w	1078 <_Unwind_GetGR.constprop.0>

00001094 <__gnu_unwind_execute>:
    1094:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    1098:	4606      	mov	r6, r0
    109a:	b085      	sub	sp, #20
    109c:	460d      	mov	r5, r1
    109e:	f04f 0800 	mov.w	r8, #0
    10a2:	4628      	mov	r0, r5
    10a4:	f7ff ffd0 	bl	1048 <next_unwind_byte>
    10a8:	28b0      	cmp	r0, #176	; 0xb0
    10aa:	4604      	mov	r4, r0
    10ac:	f000 80be 	beq.w	122c <__gnu_unwind_execute+0x198>
    10b0:	f020 027f 	bic.w	r2, r0, #127	; 0x7f
    10b4:	b2d1      	uxtb	r1, r2
    10b6:	b301      	cbz	r1, 10fa <__gnu_unwind_execute+0x66>
    10b8:	f000 00f0 	and.w	r0, r0, #240	; 0xf0
    10bc:	2880      	cmp	r0, #128	; 0x80
    10be:	d079      	beq.n	11b4 <__gnu_unwind_execute+0x120>
    10c0:	2890      	cmp	r0, #144	; 0x90
    10c2:	d03b      	beq.n	113c <__gnu_unwind_execute+0xa8>
    10c4:	28a0      	cmp	r0, #160	; 0xa0
    10c6:	d047      	beq.n	1158 <__gnu_unwind_execute+0xc4>
    10c8:	28b0      	cmp	r0, #176	; 0xb0
    10ca:	d05b      	beq.n	1184 <__gnu_unwind_execute+0xf0>
    10cc:	28c0      	cmp	r0, #192	; 0xc0
    10ce:	f000 8089 	beq.w	11e4 <__gnu_unwind_execute+0x150>
    10d2:	f004 03f8 	and.w	r3, r4, #248	; 0xf8
    10d6:	2bd0      	cmp	r3, #208	; 0xd0
    10d8:	d10b      	bne.n	10f2 <__gnu_unwind_execute+0x5e>
    10da:	f004 0407 	and.w	r4, r4, #7
    10de:	1c62      	adds	r2, r4, #1
    10e0:	4630      	mov	r0, r6
    10e2:	2101      	movs	r1, #1
    10e4:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
    10e8:	2305      	movs	r3, #5
    10ea:	f7ff fd0b 	bl	b04 <_Unwind_VRS_Pop>
    10ee:	2800      	cmp	r0, #0
    10f0:	d0d7      	beq.n	10a2 <__gnu_unwind_execute+0xe>
    10f2:	2009      	movs	r0, #9
    10f4:	b005      	add	sp, #20
    10f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    10fa:	ea4f 0980 	mov.w	r9, r0, lsl #2
    10fe:	af03      	add	r7, sp, #12
    1100:	460b      	mov	r3, r1
    1102:	fa5f fc89 	uxtb.w	ip, r9
    1106:	9700      	str	r7, [sp, #0]
    1108:	4630      	mov	r0, r6
    110a:	220d      	movs	r2, #13
    110c:	f10c 0904 	add.w	r9, ip, #4
    1110:	f7ff faca 	bl	6a8 <_Unwind_VRS_Get>
    1114:	f004 0140 	and.w	r1, r4, #64	; 0x40
    1118:	b2c8      	uxtb	r0, r1
    111a:	9b03      	ldr	r3, [sp, #12]
    111c:	b950      	cbnz	r0, 1134 <__gnu_unwind_execute+0xa0>
    111e:	eb03 0409 	add.w	r4, r3, r9
    1122:	9403      	str	r4, [sp, #12]
    1124:	2100      	movs	r1, #0
    1126:	9700      	str	r7, [sp, #0]
    1128:	4630      	mov	r0, r6
    112a:	220d      	movs	r2, #13
    112c:	460b      	mov	r3, r1
    112e:	f7ff fad9 	bl	6e4 <_Unwind_VRS_Set>
    1132:	e7b6      	b.n	10a2 <__gnu_unwind_execute+0xe>
    1134:	ebc9 0203 	rsb	r2, r9, r3
    1138:	9203      	str	r2, [sp, #12]
    113a:	e7f3      	b.n	1124 <__gnu_unwind_execute+0x90>
    113c:	f004 020f 	and.w	r2, r4, #15
    1140:	2a0d      	cmp	r2, #13
    1142:	d0d6      	beq.n	10f2 <__gnu_unwind_execute+0x5e>
    1144:	2a0f      	cmp	r2, #15
    1146:	d0d4      	beq.n	10f2 <__gnu_unwind_execute+0x5e>
    1148:	af03      	add	r7, sp, #12
    114a:	2100      	movs	r1, #0
    114c:	460b      	mov	r3, r1
    114e:	9700      	str	r7, [sp, #0]
    1150:	4630      	mov	r0, r6
    1152:	f7ff faa9 	bl	6a8 <_Unwind_VRS_Get>
    1156:	e7e5      	b.n	1124 <__gnu_unwind_execute+0x90>
    1158:	43e1      	mvns	r1, r4
    115a:	f44f 637f 	mov.w	r3, #4080	; 0xff0
    115e:	f001 0207 	and.w	r2, r1, #7
    1162:	f004 0008 	and.w	r0, r4, #8
    1166:	fa43 f202 	asr.w	r2, r3, r2
    116a:	b2c4      	uxtb	r4, r0
    116c:	401a      	ands	r2, r3
    116e:	b10c      	cbz	r4, 1174 <__gnu_unwind_execute+0xe0>
    1170:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
    1174:	2100      	movs	r1, #0
    1176:	4630      	mov	r0, r6
    1178:	460b      	mov	r3, r1
    117a:	f7ff fcc3 	bl	b04 <_Unwind_VRS_Pop>
    117e:	2800      	cmp	r0, #0
    1180:	d1b7      	bne.n	10f2 <__gnu_unwind_execute+0x5e>
    1182:	e78e      	b.n	10a2 <__gnu_unwind_execute+0xe>
    1184:	2cb1      	cmp	r4, #177	; 0xb1
    1186:	d065      	beq.n	1254 <__gnu_unwind_execute+0x1c0>
    1188:	2cb2      	cmp	r4, #178	; 0xb2
    118a:	d076      	beq.n	127a <__gnu_unwind_execute+0x1e6>
    118c:	2cb3      	cmp	r4, #179	; 0xb3
    118e:	f000 80a6 	beq.w	12de <__gnu_unwind_execute+0x24a>
    1192:	f004 00fc 	and.w	r0, r4, #252	; 0xfc
    1196:	28b4      	cmp	r0, #180	; 0xb4
    1198:	d04e      	beq.n	1238 <__gnu_unwind_execute+0x1a4>
    119a:	f004 0107 	and.w	r1, r4, #7
    119e:	1c4b      	adds	r3, r1, #1
    11a0:	2101      	movs	r1, #1
    11a2:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
    11a6:	4630      	mov	r0, r6
    11a8:	460b      	mov	r3, r1
    11aa:	f7ff fcab 	bl	b04 <_Unwind_VRS_Pop>
    11ae:	2800      	cmp	r0, #0
    11b0:	d19f      	bne.n	10f2 <__gnu_unwind_execute+0x5e>
    11b2:	e776      	b.n	10a2 <__gnu_unwind_execute+0xe>
    11b4:	4628      	mov	r0, r5
    11b6:	f7ff ff47 	bl	1048 <next_unwind_byte>
    11ba:	0224      	lsls	r4, r4, #8
    11bc:	4304      	orrs	r4, r0
    11be:	f5b4 4f00 	cmp.w	r4, #32768	; 0x8000
    11c2:	d096      	beq.n	10f2 <__gnu_unwind_execute+0x5e>
    11c4:	0522      	lsls	r2, r4, #20
    11c6:	2100      	movs	r1, #0
    11c8:	4630      	mov	r0, r6
    11ca:	0c12      	lsrs	r2, r2, #16
    11cc:	460b      	mov	r3, r1
    11ce:	0124      	lsls	r4, r4, #4
    11d0:	f7ff fc98 	bl	b04 <_Unwind_VRS_Pop>
    11d4:	2800      	cmp	r0, #0
    11d6:	d18c      	bne.n	10f2 <__gnu_unwind_execute+0x5e>
    11d8:	f414 4f00 	tst.w	r4, #32768	; 0x8000
    11dc:	bf18      	it	ne
    11de:	f04f 0801 	movne.w	r8, #1
    11e2:	e75e      	b.n	10a2 <__gnu_unwind_execute+0xe>
    11e4:	2cc6      	cmp	r4, #198	; 0xc6
    11e6:	f000 808d 	beq.w	1304 <__gnu_unwind_execute+0x270>
    11ea:	2cc7      	cmp	r4, #199	; 0xc7
    11ec:	f000 8094 	beq.w	1318 <__gnu_unwind_execute+0x284>
    11f0:	f004 01f8 	and.w	r1, r4, #248	; 0xf8
    11f4:	29c0      	cmp	r1, #192	; 0xc0
    11f6:	f000 80a2 	beq.w	133e <__gnu_unwind_execute+0x2aa>
    11fa:	2cc8      	cmp	r4, #200	; 0xc8
    11fc:	f000 80be 	beq.w	137c <__gnu_unwind_execute+0x2e8>
    1200:	2cc9      	cmp	r4, #201	; 0xc9
    1202:	f47f af76 	bne.w	10f2 <__gnu_unwind_execute+0x5e>
    1206:	4628      	mov	r0, r5
    1208:	f7ff ff1e 	bl	1048 <next_unwind_byte>
    120c:	f000 030f 	and.w	r3, r0, #15
    1210:	3301      	adds	r3, #1
    1212:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
    1216:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
    121a:	4630      	mov	r0, r6
    121c:	2101      	movs	r1, #1
    121e:	2305      	movs	r3, #5
    1220:	f7ff fc70 	bl	b04 <_Unwind_VRS_Pop>
    1224:	2800      	cmp	r0, #0
    1226:	f47f af64 	bne.w	10f2 <__gnu_unwind_execute+0x5e>
    122a:	e73a      	b.n	10a2 <__gnu_unwind_execute+0xe>
    122c:	f1b8 0f00 	cmp.w	r8, #0
    1230:	f000 8093 	beq.w	135a <__gnu_unwind_execute+0x2c6>
    1234:	2000      	movs	r0, #0
    1236:	e75d      	b.n	10f4 <__gnu_unwind_execute+0x60>
    1238:	f004 0203 	and.w	r2, r4, #3
    123c:	1c53      	adds	r3, r2, #1
    123e:	2102      	movs	r1, #2
    1240:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
    1244:	4630      	mov	r0, r6
    1246:	460b      	mov	r3, r1
    1248:	f7ff fc5c 	bl	b04 <_Unwind_VRS_Pop>
    124c:	2800      	cmp	r0, #0
    124e:	f47f af50 	bne.w	10f2 <__gnu_unwind_execute+0x5e>
    1252:	e726      	b.n	10a2 <__gnu_unwind_execute+0xe>
    1254:	4628      	mov	r0, r5
    1256:	f7ff fef7 	bl	1048 <next_unwind_byte>
    125a:	4602      	mov	r2, r0
    125c:	2800      	cmp	r0, #0
    125e:	f43f af48 	beq.w	10f2 <__gnu_unwind_execute+0x5e>
    1262:	f010 01f0 	ands.w	r1, r0, #240	; 0xf0
    1266:	f47f af44 	bne.w	10f2 <__gnu_unwind_execute+0x5e>
    126a:	4630      	mov	r0, r6
    126c:	460b      	mov	r3, r1
    126e:	f7ff fc49 	bl	b04 <_Unwind_VRS_Pop>
    1272:	2800      	cmp	r0, #0
    1274:	f47f af3d 	bne.w	10f2 <__gnu_unwind_execute+0x5e>
    1278:	e713      	b.n	10a2 <__gnu_unwind_execute+0xe>
    127a:	2100      	movs	r1, #0
    127c:	ac03      	add	r4, sp, #12
    127e:	220d      	movs	r2, #13
    1280:	460b      	mov	r3, r1
    1282:	9400      	str	r4, [sp, #0]
    1284:	4630      	mov	r0, r6
    1286:	f7ff fa0f 	bl	6a8 <_Unwind_VRS_Get>
    128a:	4628      	mov	r0, r5
    128c:	f7ff fedc 	bl	1048 <next_unwind_byte>
    1290:	f020 027f 	bic.w	r2, r0, #127	; 0x7f
    1294:	2702      	movs	r7, #2
    1296:	f012 0fff 	tst.w	r2, #255	; 0xff
    129a:	d00f      	beq.n	12bc <__gnu_unwind_execute+0x228>
    129c:	9b03      	ldr	r3, [sp, #12]
    129e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    12a2:	fa00 f007 	lsl.w	r0, r0, r7
    12a6:	1819      	adds	r1, r3, r0
    12a8:	4628      	mov	r0, r5
    12aa:	9103      	str	r1, [sp, #12]
    12ac:	f7ff fecc 	bl	1048 <next_unwind_byte>
    12b0:	f020 027f 	bic.w	r2, r0, #127	; 0x7f
    12b4:	3707      	adds	r7, #7
    12b6:	f012 0fff 	tst.w	r2, #255	; 0xff
    12ba:	d1ef      	bne.n	129c <__gnu_unwind_execute+0x208>
    12bc:	9400      	str	r4, [sp, #0]
    12be:	f000 047f 	and.w	r4, r0, #127	; 0x7f
    12c2:	9803      	ldr	r0, [sp, #12]
    12c4:	fa04 f707 	lsl.w	r7, r4, r7
    12c8:	f500 7301 	add.w	r3, r0, #516	; 0x204
    12cc:	2100      	movs	r1, #0
    12ce:	19dc      	adds	r4, r3, r7
    12d0:	4630      	mov	r0, r6
    12d2:	220d      	movs	r2, #13
    12d4:	460b      	mov	r3, r1
    12d6:	9403      	str	r4, [sp, #12]
    12d8:	f7ff fa04 	bl	6e4 <_Unwind_VRS_Set>
    12dc:	e6e1      	b.n	10a2 <__gnu_unwind_execute+0xe>
    12de:	4628      	mov	r0, r5
    12e0:	f7ff feb2 	bl	1048 <next_unwind_byte>
    12e4:	f000 010f 	and.w	r1, r0, #15
    12e8:	1c4b      	adds	r3, r1, #1
    12ea:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
    12ee:	2101      	movs	r1, #1
    12f0:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
    12f4:	4630      	mov	r0, r6
    12f6:	460b      	mov	r3, r1
    12f8:	f7ff fc04 	bl	b04 <_Unwind_VRS_Pop>
    12fc:	2800      	cmp	r0, #0
    12fe:	f47f aef8 	bne.w	10f2 <__gnu_unwind_execute+0x5e>
    1302:	e6ce      	b.n	10a2 <__gnu_unwind_execute+0xe>
    1304:	4628      	mov	r0, r5
    1306:	f7ff fe9f 	bl	1048 <next_unwind_byte>
    130a:	f000 020f 	and.w	r2, r0, #15
    130e:	1c53      	adds	r3, r2, #1
    1310:	2103      	movs	r1, #3
    1312:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
    1316:	e7eb      	b.n	12f0 <__gnu_unwind_execute+0x25c>
    1318:	4628      	mov	r0, r5
    131a:	f7ff fe95 	bl	1048 <next_unwind_byte>
    131e:	4602      	mov	r2, r0
    1320:	2800      	cmp	r0, #0
    1322:	f43f aee6 	beq.w	10f2 <__gnu_unwind_execute+0x5e>
    1326:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
    132a:	f47f aee2 	bne.w	10f2 <__gnu_unwind_execute+0x5e>
    132e:	4630      	mov	r0, r6
    1330:	2104      	movs	r1, #4
    1332:	f7ff fbe7 	bl	b04 <_Unwind_VRS_Pop>
    1336:	2800      	cmp	r0, #0
    1338:	f47f aedb 	bne.w	10f2 <__gnu_unwind_execute+0x5e>
    133c:	e6b1      	b.n	10a2 <__gnu_unwind_execute+0xe>
    133e:	f004 010f 	and.w	r1, r4, #15
    1342:	1c4b      	adds	r3, r1, #1
    1344:	2103      	movs	r1, #3
    1346:	f443 2220 	orr.w	r2, r3, #655360	; 0xa0000
    134a:	4630      	mov	r0, r6
    134c:	460b      	mov	r3, r1
    134e:	f7ff fbd9 	bl	b04 <_Unwind_VRS_Pop>
    1352:	2800      	cmp	r0, #0
    1354:	f47f aecd 	bne.w	10f2 <__gnu_unwind_execute+0x5e>
    1358:	e6a3      	b.n	10a2 <__gnu_unwind_execute+0xe>
    135a:	ac03      	add	r4, sp, #12
    135c:	4641      	mov	r1, r8
    135e:	220e      	movs	r2, #14
    1360:	4643      	mov	r3, r8
    1362:	9400      	str	r4, [sp, #0]
    1364:	4630      	mov	r0, r6
    1366:	f7ff f99f 	bl	6a8 <_Unwind_VRS_Get>
    136a:	9400      	str	r4, [sp, #0]
    136c:	4630      	mov	r0, r6
    136e:	4641      	mov	r1, r8
    1370:	220f      	movs	r2, #15
    1372:	4643      	mov	r3, r8
    1374:	f7ff f9b6 	bl	6e4 <_Unwind_VRS_Set>
    1378:	4640      	mov	r0, r8
    137a:	e6bb      	b.n	10f4 <__gnu_unwind_execute+0x60>
    137c:	4628      	mov	r0, r5
    137e:	f7ff fe63 	bl	1048 <next_unwind_byte>
    1382:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
    1386:	f000 000f 	and.w	r0, r0, #15
    138a:	3210      	adds	r2, #16
    138c:	1c43      	adds	r3, r0, #1
    138e:	e742      	b.n	1216 <__gnu_unwind_execute+0x182>

00001390 <__gnu_unwind_frame>:
    1390:	b510      	push	{r4, lr}
    1392:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    1394:	b084      	sub	sp, #16
    1396:	2203      	movs	r2, #3
    1398:	685c      	ldr	r4, [r3, #4]
    139a:	f88d 200c 	strb.w	r2, [sp, #12]
    139e:	79da      	ldrb	r2, [r3, #7]
    13a0:	0224      	lsls	r4, r4, #8
    13a2:	3308      	adds	r3, #8
    13a4:	4608      	mov	r0, r1
    13a6:	a901      	add	r1, sp, #4
    13a8:	9401      	str	r4, [sp, #4]
    13aa:	9302      	str	r3, [sp, #8]
    13ac:	f88d 200d 	strb.w	r2, [sp, #13]
    13b0:	f7ff fe70 	bl	1094 <__gnu_unwind_execute>
    13b4:	b004      	add	sp, #16
    13b6:	bd10      	pop	{r4, pc}

000013b8 <_Unwind_GetRegionStart>:
    13b8:	b508      	push	{r3, lr}
    13ba:	f7ff fe69 	bl	1090 <unwind_UCB_from_context>
    13be:	6c80      	ldr	r0, [r0, #72]	; 0x48
    13c0:	bd08      	pop	{r3, pc}
    13c2:	bf00      	nop

000013c4 <_Unwind_GetLanguageSpecificData>:
    13c4:	b508      	push	{r3, lr}
    13c6:	f7ff fe63 	bl	1090 <unwind_UCB_from_context>
    13ca:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    13cc:	79da      	ldrb	r2, [r3, #7]
    13ce:	eb03 0082 	add.w	r0, r3, r2, lsl #2
    13d2:	3008      	adds	r0, #8
    13d4:	bd08      	pop	{r3, pc}
    13d6:	bf00      	nop

000013d8 <_Unwind_GetDataRelBase>:
    13d8:	b508      	push	{r3, lr}
    13da:	f7fe ff73 	bl	2c4 <abort>
    13de:	bf00      	nop

000013e0 <_Unwind_GetTextRelBase>:
    13e0:	b508      	push	{r3, lr}
    13e2:	f7fe ff6f 	bl	2c4 <abort>
    13e6:	bf00      	nop
